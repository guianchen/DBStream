#include "expressionOperator.h"
#include "field.h"
namespace SHELL {
	dualArgvMathOperatorMatrix* dualArgvMathOperators[SQL_PARSER::NOT_OPERATION] = { 0 };
	singleArgvMathOperatorMatrix* singleArgvMathOperators[SQL_PARSER::NOT_OPERATION] = { 0 };
	dualArgvLogicOperatorMatrix* dualArgvLogicOperators[SQL_PARSER::NOT_OPERATION] = { 0 };
	singleArgvLogicOperatorMatrix* singleArgvLogicOperators[SQL_PARSER::NOT_OPERATION] = { 0 };
	/*TILDE ~*/
	template<typename T>
	void* operatorTilde(void* argv)
	{
		T v = ~(*(T*)&argv);
		return *(void**)&v;
	}
	static void initTilde()
	{
		singleArgvMathOperators[SQL_PARSER::TILDE] = new singleArgvMathOperatorMatrix(SQL_PARSER::TILDE);
		singleArgvMathOperators[SQL_PARSER::TILDE]->set(META::T_UINT8, operatorTilde<uint8_t>, META::T_UINT8);
		singleArgvMathOperators[SQL_PARSER::TILDE]->set(META::T_INT8, operatorTilde<int8_t>, META::T_INT8);
		singleArgvMathOperators[SQL_PARSER::TILDE]->set(META::T_UINT16, operatorTilde<uint16_t>, META::T_UINT16);
		singleArgvMathOperators[SQL_PARSER::TILDE]->set(META::T_INT16, operatorTilde<int16_t>, META::T_INT16);
		singleArgvMathOperators[SQL_PARSER::TILDE]->set(META::T_UINT32, operatorTilde<uint32_t>, META::T_UINT32);
		singleArgvMathOperators[SQL_PARSER::TILDE]->set(META::T_INT32, operatorTilde<int32_t>, META::T_INT32);
		singleArgvMathOperators[SQL_PARSER::TILDE]->set(META::T_UINT64, operatorTilde<uint64_t>, META::T_UINT64);
		singleArgvMathOperators[SQL_PARSER::TILDE]->set(META::T_INT64, operatorTilde<int64_t>, META::T_INT64);
	}
	/*PLUS +*/
	template<typename TL, typename TR>
	void* operatorAdd(void* l, void* r)
	{
		TL v = (*(TL*)&l) + (*(TR*)&r);
		return *(void**)&v;
	}
	static void initAdd()
	{
		dualArgvMathOperators[SQL_PARSER::PLUS] = new dualArgvMathOperatorMatrix(SQL_PARSER::PLUS);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT8, operatorAdd<uint8_t, uint8_t>, META::T_UINT8, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT8, operatorAdd<uint8_t, uint16_t>, META::T_UINT8, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT8, operatorAdd<uint8_t, uint32_t>, META::T_UINT8, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT8, operatorAdd<uint8_t, uint64_t>, META::T_UINT8, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT8, operatorAdd<uint8_t, int8_t>, META::T_UINT8, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT8, operatorAdd<uint8_t, int16_t>, META::T_UINT8, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT8, operatorAdd<uint8_t, int32_t>, META::T_UINT8, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT8, operatorAdd<uint8_t, int64_t>, META::T_UINT8, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT8, operatorAdd<uint8_t, float>, META::T_UINT8, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT8, operatorAdd<uint8_t, double>, META::T_UINT8, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT16, operatorAdd<uint16_t, uint8_t>, META::T_UINT16, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT16, operatorAdd<uint16_t, uint16_t>, META::T_UINT16, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT16, operatorAdd<uint16_t, uint32_t>, META::T_UINT16, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT16, operatorAdd<uint16_t, uint64_t>, META::T_UINT16, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT16, operatorAdd<uint16_t, int8_t>, META::T_UINT16, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT16, operatorAdd<uint16_t, int16_t>, META::T_UINT16, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT16, operatorAdd<uint16_t, int32_t>, META::T_UINT16, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT16, operatorAdd<uint16_t, int64_t>, META::T_UINT16, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT16, operatorAdd<uint16_t, float>, META::T_UINT16, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT16, operatorAdd<uint16_t, double>, META::T_UINT16, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT32, operatorAdd<uint32_t, uint8_t>, META::T_UINT32, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT32, operatorAdd<uint32_t, uint16_t>, META::T_UINT32, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT32, operatorAdd<uint32_t, uint32_t>, META::T_UINT32, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT32, operatorAdd<uint32_t, uint64_t>, META::T_UINT32, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT32, operatorAdd<uint32_t, int8_t>, META::T_UINT32, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT32, operatorAdd<uint32_t, int16_t>, META::T_UINT32, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT32, operatorAdd<uint32_t, int32_t>, META::T_UINT32, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT32, operatorAdd<uint32_t, int64_t>, META::T_UINT32, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT32, operatorAdd<uint32_t, float>, META::T_UINT32, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT32, operatorAdd<uint32_t, double>, META::T_UINT32, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT64, operatorAdd<uint64_t, uint8_t>, META::T_UINT64, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT64, operatorAdd<uint64_t, uint16_t>, META::T_UINT64, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT64, operatorAdd<uint64_t, uint32_t>, META::T_UINT64, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT64, operatorAdd<uint64_t, uint64_t>, META::T_UINT64, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT64, operatorAdd<uint64_t, int8_t>, META::T_UINT64, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT64, operatorAdd<uint64_t, int16_t>, META::T_UINT64, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT64, operatorAdd<uint64_t, int32_t>, META::T_UINT64, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT64, operatorAdd<uint64_t, int64_t>, META::T_UINT64, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT64, operatorAdd<uint64_t, float>, META::T_UINT64, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_UINT64, operatorAdd<uint64_t, double>, META::T_UINT64, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT8, operatorAdd<int8_t, uint8_t>, META::T_INT8, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT8, operatorAdd<int8_t, uint16_t>, META::T_INT8, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT8, operatorAdd<int8_t, uint32_t>, META::T_INT8, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT8, operatorAdd<int8_t, uint64_t>, META::T_INT8, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT8, operatorAdd<int8_t, int8_t>, META::T_INT8, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT8, operatorAdd<int8_t, int16_t>, META::T_INT8, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT8, operatorAdd<int8_t, int32_t>, META::T_INT8, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT8, operatorAdd<int8_t, int64_t>, META::T_INT8, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT8, operatorAdd<int8_t, float>, META::T_INT8, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT8, operatorAdd<int8_t, double>, META::T_INT8, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT16, operatorAdd<int16_t, uint8_t>, META::T_INT16, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT16, operatorAdd<int16_t, uint16_t>, META::T_INT16, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT16, operatorAdd<int16_t, uint32_t>, META::T_INT16, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT16, operatorAdd<int16_t, uint64_t>, META::T_INT16, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT16, operatorAdd<int16_t, int8_t>, META::T_INT16, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT16, operatorAdd<int16_t, int16_t>, META::T_INT16, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT16, operatorAdd<int16_t, int32_t>, META::T_INT16, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT16, operatorAdd<int16_t, int64_t>, META::T_INT16, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT16, operatorAdd<int16_t, float>, META::T_INT16, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT16, operatorAdd<int16_t, double>, META::T_INT16, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT32, operatorAdd<int32_t, uint8_t>, META::T_INT32, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT32, operatorAdd<int32_t, uint16_t>, META::T_INT32, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT32, operatorAdd<int32_t, uint32_t>, META::T_INT32, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT32, operatorAdd<int32_t, uint64_t>, META::T_INT32, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT32, operatorAdd<int32_t, int8_t>, META::T_INT32, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT32, operatorAdd<int32_t, int16_t>, META::T_INT32, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT32, operatorAdd<int32_t, int32_t>, META::T_INT32, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT32, operatorAdd<int32_t, int64_t>, META::T_INT32, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT32, operatorAdd<int32_t, float>, META::T_INT32, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT32, operatorAdd<int32_t, double>, META::T_INT32, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT64, operatorAdd<int64_t, uint8_t>, META::T_INT64, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT64, operatorAdd<int64_t, uint16_t>, META::T_INT64, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT64, operatorAdd<int64_t, uint32_t>, META::T_INT64, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT64, operatorAdd<int64_t, uint64_t>, META::T_INT64, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT64, operatorAdd<int64_t, int8_t>, META::T_INT64, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT64, operatorAdd<int64_t, int16_t>, META::T_INT64, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT64, operatorAdd<int64_t, int32_t>, META::T_INT64, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT64, operatorAdd<int64_t, int64_t>, META::T_INT64, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT64, operatorAdd<int64_t, float>, META::T_INT64, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_INT64, operatorAdd<int64_t, double>, META::T_INT64, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_FLOAT, operatorAdd<float, uint8_t>, META::T_FLOAT, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_FLOAT, operatorAdd<float, uint16_t>, META::T_FLOAT, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_FLOAT, operatorAdd<float, uint32_t>, META::T_FLOAT, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_FLOAT, operatorAdd<float, uint64_t>, META::T_FLOAT, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_FLOAT, operatorAdd<float, int8_t>, META::T_FLOAT, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_FLOAT, operatorAdd<float, int16_t>, META::T_FLOAT, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_FLOAT, operatorAdd<float, int32_t>, META::T_FLOAT, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_FLOAT, operatorAdd<float, int64_t>, META::T_FLOAT, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_FLOAT, operatorAdd<float, float>, META::T_FLOAT, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_FLOAT, operatorAdd<float, double>, META::T_FLOAT, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_DOUBLE, operatorAdd<double, uint8_t>, META::T_DOUBLE, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_DOUBLE, operatorAdd<double, uint16_t>, META::T_DOUBLE, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_DOUBLE, operatorAdd<double, uint32_t>, META::T_DOUBLE, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_DOUBLE, operatorAdd<double, uint64_t>, META::T_DOUBLE, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_DOUBLE, operatorAdd<double, int8_t>, META::T_DOUBLE, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_DOUBLE, operatorAdd<double, int16_t>, META::T_DOUBLE, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_DOUBLE, operatorAdd<double, int32_t>, META::T_DOUBLE, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_DOUBLE, operatorAdd<double, int64_t>, META::T_DOUBLE, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_DOUBLE, operatorAdd<double, float>, META::T_DOUBLE, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::PLUS]->set(META::T_DOUBLE, operatorAdd<double, double>, META::T_DOUBLE, META::T_DOUBLE);
	}
	/*SUB -*/
	template<typename TL, typename TR>
	void* operatorSub(void* l, void* r)
	{
		TL v = (*(TL*)&l) - (*(TR*)&r);
		return *(void**)&v;
	}
	static void initSub()
	{
		dualArgvMathOperators[SQL_PARSER::SUBTRACT] = new dualArgvMathOperatorMatrix(SQL_PARSER::SUBTRACT);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT8, operatorSub<uint8_t, uint8_t>, META::T_UINT8, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT8, operatorSub<uint8_t, uint16_t>, META::T_UINT8, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT8, operatorSub<uint8_t, uint32_t>, META::T_UINT8, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT8, operatorSub<uint8_t, uint64_t>, META::T_UINT8, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT8, operatorSub<uint8_t, int8_t>, META::T_UINT8, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT8, operatorSub<uint8_t, int16_t>, META::T_UINT8, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT8, operatorSub<uint8_t, int32_t>, META::T_UINT8, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT8, operatorSub<uint8_t, int64_t>, META::T_UINT8, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT8, operatorSub<uint8_t, float>, META::T_UINT8, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT8, operatorSub<uint8_t, double>, META::T_UINT8, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT16, operatorSub<uint16_t, uint8_t>, META::T_UINT16, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT16, operatorSub<uint16_t, uint16_t>, META::T_UINT16, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT16, operatorSub<uint16_t, uint32_t>, META::T_UINT16, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT16, operatorSub<uint16_t, uint64_t>, META::T_UINT16, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT16, operatorSub<uint16_t, int8_t>, META::T_UINT16, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT16, operatorSub<uint16_t, int16_t>, META::T_UINT16, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT16, operatorSub<uint16_t, int32_t>, META::T_UINT16, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT16, operatorSub<uint16_t, int64_t>, META::T_UINT16, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT16, operatorSub<uint16_t, float>, META::T_UINT16, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT16, operatorSub<uint16_t, double>, META::T_UINT16, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT32, operatorSub<uint32_t, uint8_t>, META::T_UINT32, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT32, operatorSub<uint32_t, uint16_t>, META::T_UINT32, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT32, operatorSub<uint32_t, uint32_t>, META::T_UINT32, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT32, operatorSub<uint32_t, uint64_t>, META::T_UINT32, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT32, operatorSub<uint32_t, int8_t>, META::T_UINT32, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT32, operatorSub<uint32_t, int16_t>, META::T_UINT32, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT32, operatorSub<uint32_t, int32_t>, META::T_UINT32, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT32, operatorSub<uint32_t, int64_t>, META::T_UINT32, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT32, operatorSub<uint32_t, float>, META::T_UINT32, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT32, operatorSub<uint32_t, double>, META::T_UINT32, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT64, operatorSub<uint64_t, uint8_t>, META::T_UINT64, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT64, operatorSub<uint64_t, uint16_t>, META::T_UINT64, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT64, operatorSub<uint64_t, uint32_t>, META::T_UINT64, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT64, operatorSub<uint64_t, uint64_t>, META::T_UINT64, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT64, operatorSub<uint64_t, int8_t>, META::T_UINT64, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT64, operatorSub<uint64_t, int16_t>, META::T_UINT64, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT64, operatorSub<uint64_t, int32_t>, META::T_UINT64, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT64, operatorSub<uint64_t, int64_t>, META::T_UINT64, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT64, operatorSub<uint64_t, float>, META::T_UINT64, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_UINT64, operatorSub<uint64_t, double>, META::T_UINT64, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT8, operatorSub<int8_t, uint8_t>, META::T_INT8, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT8, operatorSub<int8_t, uint16_t>, META::T_INT8, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT8, operatorSub<int8_t, uint32_t>, META::T_INT8, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT8, operatorSub<int8_t, uint64_t>, META::T_INT8, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT8, operatorSub<int8_t, int8_t>, META::T_INT8, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT8, operatorSub<int8_t, int16_t>, META::T_INT8, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT8, operatorSub<int8_t, int32_t>, META::T_INT8, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT8, operatorSub<int8_t, int64_t>, META::T_INT8, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT8, operatorSub<int8_t, float>, META::T_INT8, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT8, operatorSub<int8_t, double>, META::T_INT8, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT16, operatorSub<int16_t, uint8_t>, META::T_INT16, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT16, operatorSub<int16_t, uint16_t>, META::T_INT16, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT16, operatorSub<int16_t, uint32_t>, META::T_INT16, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT16, operatorSub<int16_t, uint64_t>, META::T_INT16, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT16, operatorSub<int16_t, int8_t>, META::T_INT16, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT16, operatorSub<int16_t, int16_t>, META::T_INT16, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT16, operatorSub<int16_t, int32_t>, META::T_INT16, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT16, operatorSub<int16_t, int64_t>, META::T_INT16, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT16, operatorSub<int16_t, float>, META::T_INT16, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT16, operatorSub<int16_t, double>, META::T_INT16, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT32, operatorSub<int32_t, uint8_t>, META::T_INT32, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT32, operatorSub<int32_t, uint16_t>, META::T_INT32, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT32, operatorSub<int32_t, uint32_t>, META::T_INT32, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT32, operatorSub<int32_t, uint64_t>, META::T_INT32, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT32, operatorSub<int32_t, int8_t>, META::T_INT32, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT32, operatorSub<int32_t, int16_t>, META::T_INT32, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT32, operatorSub<int32_t, int32_t>, META::T_INT32, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT32, operatorSub<int32_t, int64_t>, META::T_INT32, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT32, operatorSub<int32_t, float>, META::T_INT32, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT32, operatorSub<int32_t, double>, META::T_INT32, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT64, operatorSub<int64_t, uint8_t>, META::T_INT64, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT64, operatorSub<int64_t, uint16_t>, META::T_INT64, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT64, operatorSub<int64_t, uint32_t>, META::T_INT64, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT64, operatorSub<int64_t, uint64_t>, META::T_INT64, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT64, operatorSub<int64_t, int8_t>, META::T_INT64, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT64, operatorSub<int64_t, int16_t>, META::T_INT64, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT64, operatorSub<int64_t, int32_t>, META::T_INT64, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT64, operatorSub<int64_t, int64_t>, META::T_INT64, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT64, operatorSub<int64_t, float>, META::T_INT64, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_INT64, operatorSub<int64_t, double>, META::T_INT64, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_FLOAT, operatorSub<float, uint8_t>, META::T_FLOAT, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_FLOAT, operatorSub<float, uint16_t>, META::T_FLOAT, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_FLOAT, operatorSub<float, uint32_t>, META::T_FLOAT, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_FLOAT, operatorSub<float, uint64_t>, META::T_FLOAT, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_FLOAT, operatorSub<float, int8_t>, META::T_FLOAT, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_FLOAT, operatorSub<float, int16_t>, META::T_FLOAT, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_FLOAT, operatorSub<float, int32_t>, META::T_FLOAT, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_FLOAT, operatorSub<float, int64_t>, META::T_FLOAT, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_FLOAT, operatorSub<float, float>, META::T_FLOAT, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_FLOAT, operatorSub<float, double>, META::T_FLOAT, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_DOUBLE, operatorSub<double, uint8_t>, META::T_DOUBLE, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_DOUBLE, operatorSub<double, uint16_t>, META::T_DOUBLE, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_DOUBLE, operatorSub<double, uint32_t>, META::T_DOUBLE, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_DOUBLE, operatorSub<double, uint64_t>, META::T_DOUBLE, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_DOUBLE, operatorSub<double, int8_t>, META::T_DOUBLE, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_DOUBLE, operatorSub<double, int16_t>, META::T_DOUBLE, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_DOUBLE, operatorSub<double, int32_t>, META::T_DOUBLE, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_DOUBLE, operatorSub<double, int64_t>, META::T_DOUBLE, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_DOUBLE, operatorSub<double, float>, META::T_DOUBLE, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::SUBTRACT]->set(META::T_DOUBLE, operatorSub<double, double>, META::T_DOUBLE, META::T_DOUBLE);
	}
	/*MULTIPLE * */
	template<typename TL, typename TR>
	void* operatorMul(void* l, void* r)
	{
		TL v = (*(TL*)&l) * (*(TR*)&r);
		return *(void**)&v;
	}
	static void initMul()
	{
		dualArgvMathOperators[SQL_PARSER::MULTIPLE] = new dualArgvMathOperatorMatrix(SQL_PARSER::MULTIPLE);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT8, operatorMul<uint8_t, uint8_t>, META::T_UINT8, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT8, operatorMul<uint8_t, uint16_t>, META::T_UINT8, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT8, operatorMul<uint8_t, uint32_t>, META::T_UINT8, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT8, operatorMul<uint8_t, uint64_t>, META::T_UINT8, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT8, operatorMul<uint8_t, int8_t>, META::T_UINT8, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT8, operatorMul<uint8_t, int16_t>, META::T_UINT8, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT8, operatorMul<uint8_t, int32_t>, META::T_UINT8, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT8, operatorMul<uint8_t, int64_t>, META::T_UINT8, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT8, operatorMul<uint8_t, float>, META::T_UINT8, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT8, operatorMul<uint8_t, double>, META::T_UINT8, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT16, operatorMul<uint16_t, uint8_t>, META::T_UINT16, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT16, operatorMul<uint16_t, uint16_t>, META::T_UINT16, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT16, operatorMul<uint16_t, uint32_t>, META::T_UINT16, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT16, operatorMul<uint16_t, uint64_t>, META::T_UINT16, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT16, operatorMul<uint16_t, int8_t>, META::T_UINT16, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT16, operatorMul<uint16_t, int16_t>, META::T_UINT16, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT16, operatorMul<uint16_t, int32_t>, META::T_UINT16, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT16, operatorMul<uint16_t, int64_t>, META::T_UINT16, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT16, operatorMul<uint16_t, float>, META::T_UINT16, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT16, operatorMul<uint16_t, double>, META::T_UINT16, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT32, operatorMul<uint32_t, uint8_t>, META::T_UINT32, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT32, operatorMul<uint32_t, uint16_t>, META::T_UINT32, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT32, operatorMul<uint32_t, uint32_t>, META::T_UINT32, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT32, operatorMul<uint32_t, uint64_t>, META::T_UINT32, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT32, operatorMul<uint32_t, int8_t>, META::T_UINT32, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT32, operatorMul<uint32_t, int16_t>, META::T_UINT32, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT32, operatorMul<uint32_t, int32_t>, META::T_UINT32, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT32, operatorMul<uint32_t, int64_t>, META::T_UINT32, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT32, operatorMul<uint32_t, float>, META::T_UINT32, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT32, operatorMul<uint32_t, double>, META::T_UINT32, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT64, operatorMul<uint64_t, uint8_t>, META::T_UINT64, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT64, operatorMul<uint64_t, uint16_t>, META::T_UINT64, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT64, operatorMul<uint64_t, uint32_t>, META::T_UINT64, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT64, operatorMul<uint64_t, uint64_t>, META::T_UINT64, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT64, operatorMul<uint64_t, int8_t>, META::T_UINT64, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT64, operatorMul<uint64_t, int16_t>, META::T_UINT64, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT64, operatorMul<uint64_t, int32_t>, META::T_UINT64, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT64, operatorMul<uint64_t, int64_t>, META::T_UINT64, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT64, operatorMul<uint64_t, float>, META::T_UINT64, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_UINT64, operatorMul<uint64_t, double>, META::T_UINT64, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT8, operatorMul<int8_t, uint8_t>, META::T_INT8, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT8, operatorMul<int8_t, uint16_t>, META::T_INT8, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT8, operatorMul<int8_t, uint32_t>, META::T_INT8, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT8, operatorMul<int8_t, uint64_t>, META::T_INT8, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT8, operatorMul<int8_t, int8_t>, META::T_INT8, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT8, operatorMul<int8_t, int16_t>, META::T_INT8, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT8, operatorMul<int8_t, int32_t>, META::T_INT8, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT8, operatorMul<int8_t, int64_t>, META::T_INT8, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT8, operatorMul<int8_t, float>, META::T_INT8, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT8, operatorMul<int8_t, double>, META::T_INT8, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT16, operatorMul<int16_t, uint8_t>, META::T_INT16, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT16, operatorMul<int16_t, uint16_t>, META::T_INT16, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT16, operatorMul<int16_t, uint32_t>, META::T_INT16, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT16, operatorMul<int16_t, uint64_t>, META::T_INT16, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT16, operatorMul<int16_t, int8_t>, META::T_INT16, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT16, operatorMul<int16_t, int16_t>, META::T_INT16, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT16, operatorMul<int16_t, int32_t>, META::T_INT16, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT16, operatorMul<int16_t, int64_t>, META::T_INT16, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT16, operatorMul<int16_t, float>, META::T_INT16, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT16, operatorMul<int16_t, double>, META::T_INT16, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT32, operatorMul<int32_t, uint8_t>, META::T_INT32, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT32, operatorMul<int32_t, uint16_t>, META::T_INT32, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT32, operatorMul<int32_t, uint32_t>, META::T_INT32, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT32, operatorMul<int32_t, uint64_t>, META::T_INT32, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT32, operatorMul<int32_t, int8_t>, META::T_INT32, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT32, operatorMul<int32_t, int16_t>, META::T_INT32, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT32, operatorMul<int32_t, int32_t>, META::T_INT32, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT32, operatorMul<int32_t, int64_t>, META::T_INT32, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT32, operatorMul<int32_t, float>, META::T_INT32, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT32, operatorMul<int32_t, double>, META::T_INT32, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT64, operatorMul<int64_t, uint8_t>, META::T_INT64, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT64, operatorMul<int64_t, uint16_t>, META::T_INT64, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT64, operatorMul<int64_t, uint32_t>, META::T_INT64, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT64, operatorMul<int64_t, uint64_t>, META::T_INT64, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT64, operatorMul<int64_t, int8_t>, META::T_INT64, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT64, operatorMul<int64_t, int16_t>, META::T_INT64, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT64, operatorMul<int64_t, int32_t>, META::T_INT64, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT64, operatorMul<int64_t, int64_t>, META::T_INT64, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT64, operatorMul<int64_t, float>, META::T_INT64, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_INT64, operatorMul<int64_t, double>, META::T_INT64, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_FLOAT, operatorMul<float, uint8_t>, META::T_FLOAT, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_FLOAT, operatorMul<float, uint16_t>, META::T_FLOAT, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_FLOAT, operatorMul<float, uint32_t>, META::T_FLOAT, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_FLOAT, operatorMul<float, uint64_t>, META::T_FLOAT, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_FLOAT, operatorMul<float, int8_t>, META::T_FLOAT, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_FLOAT, operatorMul<float, int16_t>, META::T_FLOAT, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_FLOAT, operatorMul<float, int32_t>, META::T_FLOAT, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_FLOAT, operatorMul<float, int64_t>, META::T_FLOAT, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_FLOAT, operatorMul<float, float>, META::T_FLOAT, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_FLOAT, operatorMul<float, double>, META::T_FLOAT, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_DOUBLE, operatorMul<double, uint8_t>, META::T_DOUBLE, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_DOUBLE, operatorMul<double, uint16_t>, META::T_DOUBLE, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_DOUBLE, operatorMul<double, uint32_t>, META::T_DOUBLE, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_DOUBLE, operatorMul<double, uint64_t>, META::T_DOUBLE, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_DOUBLE, operatorMul<double, int8_t>, META::T_DOUBLE, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_DOUBLE, operatorMul<double, int16_t>, META::T_DOUBLE, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_DOUBLE, operatorMul<double, int32_t>, META::T_DOUBLE, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_DOUBLE, operatorMul<double, int64_t>, META::T_DOUBLE, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_DOUBLE, operatorMul<double, float>, META::T_DOUBLE, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::MULTIPLE]->set(META::T_DOUBLE, operatorMul<double, double>, META::T_DOUBLE, META::T_DOUBLE);
	}
	/*DIVISION / */
	template<typename TL, typename TR>
	void* operatorDiv(void* l, void* r)
	{
		TL v = (*(TL*)&l) / (*(TR*)&r);
		return *(void**)&v;
	}
	static void initDiv()
	{
		dualArgvMathOperators[SQL_PARSER::DIVISION] = new dualArgvMathOperatorMatrix(SQL_PARSER::DIVISION);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT8, operatorDiv<uint8_t, uint8_t>, META::T_UINT8, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT8, operatorDiv<uint8_t, uint16_t>, META::T_UINT8, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT8, operatorDiv<uint8_t, uint32_t>, META::T_UINT8, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT8, operatorDiv<uint8_t, uint64_t>, META::T_UINT8, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT8, operatorDiv<uint8_t, int8_t>, META::T_UINT8, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT8, operatorDiv<uint8_t, int16_t>, META::T_UINT8, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT8, operatorDiv<uint8_t, int32_t>, META::T_UINT8, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT8, operatorDiv<uint8_t, int64_t>, META::T_UINT8, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT8, operatorDiv<uint8_t, float>, META::T_UINT8, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT8, operatorDiv<uint8_t, double>, META::T_UINT8, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT16, operatorDiv<uint16_t, uint8_t>, META::T_UINT16, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT16, operatorDiv<uint16_t, uint16_t>, META::T_UINT16, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT16, operatorDiv<uint16_t, uint32_t>, META::T_UINT16, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT16, operatorDiv<uint16_t, uint64_t>, META::T_UINT16, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT16, operatorDiv<uint16_t, int8_t>, META::T_UINT16, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT16, operatorDiv<uint16_t, int16_t>, META::T_UINT16, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT16, operatorDiv<uint16_t, int32_t>, META::T_UINT16, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT16, operatorDiv<uint16_t, int64_t>, META::T_UINT16, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT16, operatorDiv<uint16_t, float>, META::T_UINT16, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT16, operatorDiv<uint16_t, double>, META::T_UINT16, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT32, operatorDiv<uint32_t, uint8_t>, META::T_UINT32, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT32, operatorDiv<uint32_t, uint16_t>, META::T_UINT32, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT32, operatorDiv<uint32_t, uint32_t>, META::T_UINT32, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT32, operatorDiv<uint32_t, uint64_t>, META::T_UINT32, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT32, operatorDiv<uint32_t, int8_t>, META::T_UINT32, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT32, operatorDiv<uint32_t, int16_t>, META::T_UINT32, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT32, operatorDiv<uint32_t, int32_t>, META::T_UINT32, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT32, operatorDiv<uint32_t, int64_t>, META::T_UINT32, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT32, operatorDiv<uint32_t, float>, META::T_UINT32, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT32, operatorDiv<uint32_t, double>, META::T_UINT32, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT64, operatorDiv<uint64_t, uint8_t>, META::T_UINT64, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT64, operatorDiv<uint64_t, uint16_t>, META::T_UINT64, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT64, operatorDiv<uint64_t, uint32_t>, META::T_UINT64, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT64, operatorDiv<uint64_t, uint64_t>, META::T_UINT64, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT64, operatorDiv<uint64_t, int8_t>, META::T_UINT64, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT64, operatorDiv<uint64_t, int16_t>, META::T_UINT64, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT64, operatorDiv<uint64_t, int32_t>, META::T_UINT64, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT64, operatorDiv<uint64_t, int64_t>, META::T_UINT64, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT64, operatorDiv<uint64_t, float>, META::T_UINT64, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_UINT64, operatorDiv<uint64_t, double>, META::T_UINT64, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT8, operatorDiv<int8_t, uint8_t>, META::T_INT8, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT8, operatorDiv<int8_t, uint16_t>, META::T_INT8, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT8, operatorDiv<int8_t, uint32_t>, META::T_INT8, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT8, operatorDiv<int8_t, uint64_t>, META::T_INT8, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT8, operatorDiv<int8_t, int8_t>, META::T_INT8, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT8, operatorDiv<int8_t, int16_t>, META::T_INT8, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT8, operatorDiv<int8_t, int32_t>, META::T_INT8, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT8, operatorDiv<int8_t, int64_t>, META::T_INT8, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT8, operatorDiv<int8_t, float>, META::T_INT8, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT8, operatorDiv<int8_t, double>, META::T_INT8, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT16, operatorDiv<int16_t, uint8_t>, META::T_INT16, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT16, operatorDiv<int16_t, uint16_t>, META::T_INT16, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT16, operatorDiv<int16_t, uint32_t>, META::T_INT16, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT16, operatorDiv<int16_t, uint64_t>, META::T_INT16, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT16, operatorDiv<int16_t, int8_t>, META::T_INT16, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT16, operatorDiv<int16_t, int16_t>, META::T_INT16, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT16, operatorDiv<int16_t, int32_t>, META::T_INT16, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT16, operatorDiv<int16_t, int64_t>, META::T_INT16, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT16, operatorDiv<int16_t, float>, META::T_INT16, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT16, operatorDiv<int16_t, double>, META::T_INT16, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT32, operatorDiv<int32_t, uint8_t>, META::T_INT32, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT32, operatorDiv<int32_t, uint16_t>, META::T_INT32, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT32, operatorDiv<int32_t, uint32_t>, META::T_INT32, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT32, operatorDiv<int32_t, uint64_t>, META::T_INT32, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT32, operatorDiv<int32_t, int8_t>, META::T_INT32, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT32, operatorDiv<int32_t, int16_t>, META::T_INT32, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT32, operatorDiv<int32_t, int32_t>, META::T_INT32, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT32, operatorDiv<int32_t, int64_t>, META::T_INT32, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT32, operatorDiv<int32_t, float>, META::T_INT32, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT32, operatorDiv<int32_t, double>, META::T_INT32, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT64, operatorDiv<int64_t, uint8_t>, META::T_INT64, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT64, operatorDiv<int64_t, uint16_t>, META::T_INT64, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT64, operatorDiv<int64_t, uint32_t>, META::T_INT64, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT64, operatorDiv<int64_t, uint64_t>, META::T_INT64, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT64, operatorDiv<int64_t, int8_t>, META::T_INT64, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT64, operatorDiv<int64_t, int16_t>, META::T_INT64, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT64, operatorDiv<int64_t, int32_t>, META::T_INT64, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT64, operatorDiv<int64_t, int64_t>, META::T_INT64, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT64, operatorDiv<int64_t, float>, META::T_INT64, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_INT64, operatorDiv<int64_t, double>, META::T_INT64, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_FLOAT, operatorDiv<float, uint8_t>, META::T_FLOAT, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_FLOAT, operatorDiv<float, uint16_t>, META::T_FLOAT, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_FLOAT, operatorDiv<float, uint32_t>, META::T_FLOAT, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_FLOAT, operatorDiv<float, uint64_t>, META::T_FLOAT, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_FLOAT, operatorDiv<float, int8_t>, META::T_FLOAT, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_FLOAT, operatorDiv<float, int16_t>, META::T_FLOAT, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_FLOAT, operatorDiv<float, int32_t>, META::T_FLOAT, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_FLOAT, operatorDiv<float, int64_t>, META::T_FLOAT, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_FLOAT, operatorDiv<float, float>, META::T_FLOAT, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_FLOAT, operatorDiv<float, double>, META::T_FLOAT, META::T_DOUBLE);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_DOUBLE, operatorDiv<double, uint8_t>, META::T_DOUBLE, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_DOUBLE, operatorDiv<double, uint16_t>, META::T_DOUBLE, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_DOUBLE, operatorDiv<double, uint32_t>, META::T_DOUBLE, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_DOUBLE, operatorDiv<double, uint64_t>, META::T_DOUBLE, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_DOUBLE, operatorDiv<double, int8_t>, META::T_DOUBLE, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_DOUBLE, operatorDiv<double, int16_t>, META::T_DOUBLE, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_DOUBLE, operatorDiv<double, int32_t>, META::T_DOUBLE, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_DOUBLE, operatorDiv<double, int64_t>, META::T_DOUBLE, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_DOUBLE, operatorDiv<double, float>, META::T_DOUBLE, META::T_FLOAT);
		dualArgvMathOperators[SQL_PARSER::DIVISION]->set(META::T_DOUBLE, operatorDiv<double, double>, META::T_DOUBLE, META::T_DOUBLE);
	}
	/*REMAINDER %*/
	template<typename TL, typename TR>
	void* operatorRem(void* l, void* r)
	{
		TL v = (*(TL*)&l) % (*(TR*)&r);
		return *(void**)&v;
	}
	static void initRem()
	{
		dualArgvMathOperators[SQL_PARSER::REMAINDER] = new dualArgvMathOperatorMatrix(SQL_PARSER::REMAINDER);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT8, operatorRem<uint8_t, uint8_t>, META::T_UINT8, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT8, operatorRem<uint8_t, uint16_t>, META::T_UINT8, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT8, operatorRem<uint8_t, uint32_t>, META::T_UINT8, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT8, operatorRem<uint8_t, uint64_t>, META::T_UINT8, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT8, operatorRem<uint8_t, int8_t>, META::T_UINT8, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT8, operatorRem<uint8_t, int16_t>, META::T_UINT8, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT8, operatorRem<uint8_t, int32_t>, META::T_UINT8, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT8, operatorRem<uint8_t, int64_t>, META::T_UINT8, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT16, operatorRem<uint16_t, uint8_t>, META::T_UINT16, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT16, operatorRem<uint16_t, uint16_t>, META::T_UINT16, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT16, operatorRem<uint16_t, uint32_t>, META::T_UINT16, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT16, operatorRem<uint16_t, uint64_t>, META::T_UINT16, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT16, operatorRem<uint16_t, int8_t>, META::T_UINT16, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT16, operatorRem<uint16_t, int16_t>, META::T_UINT16, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT16, operatorRem<uint16_t, int32_t>, META::T_UINT16, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT16, operatorRem<uint16_t, int64_t>, META::T_UINT16, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT32, operatorRem<uint32_t, uint8_t>, META::T_UINT32, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT32, operatorRem<uint32_t, uint16_t>, META::T_UINT32, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT32, operatorRem<uint32_t, uint32_t>, META::T_UINT32, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT32, operatorRem<uint32_t, uint64_t>, META::T_UINT32, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT32, operatorRem<uint32_t, int8_t>, META::T_UINT32, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT32, operatorRem<uint32_t, int16_t>, META::T_UINT32, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT32, operatorRem<uint32_t, int32_t>, META::T_UINT32, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT32, operatorRem<uint32_t, int64_t>, META::T_UINT32, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT64, operatorRem<uint64_t, uint8_t>, META::T_UINT64, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT64, operatorRem<uint64_t, uint16_t>, META::T_UINT64, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT64, operatorRem<uint64_t, uint32_t>, META::T_UINT64, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT64, operatorRem<uint64_t, uint64_t>, META::T_UINT64, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT64, operatorRem<uint64_t, int8_t>, META::T_UINT64, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT64, operatorRem<uint64_t, int16_t>, META::T_UINT64, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT64, operatorRem<uint64_t, int32_t>, META::T_UINT64, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_UINT64, operatorRem<uint64_t, int64_t>, META::T_UINT64, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT8, operatorRem<int8_t, uint8_t>, META::T_INT8, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT8, operatorRem<int8_t, uint16_t>, META::T_INT8, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT8, operatorRem<int8_t, uint32_t>, META::T_INT8, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT8, operatorRem<int8_t, uint64_t>, META::T_INT8, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT8, operatorRem<int8_t, int8_t>, META::T_INT8, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT8, operatorRem<int8_t, int16_t>, META::T_INT8, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT8, operatorRem<int8_t, int32_t>, META::T_INT8, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT8, operatorRem<int8_t, int64_t>, META::T_INT8, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT16, operatorRem<int16_t, uint8_t>, META::T_INT16, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT16, operatorRem<int16_t, uint16_t>, META::T_INT16, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT16, operatorRem<int16_t, uint32_t>, META::T_INT16, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT16, operatorRem<int16_t, uint64_t>, META::T_INT16, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT16, operatorRem<int16_t, int8_t>, META::T_INT16, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT16, operatorRem<int16_t, int16_t>, META::T_INT16, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT16, operatorRem<int16_t, int32_t>, META::T_INT16, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT16, operatorRem<int16_t, int64_t>, META::T_INT16, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT32, operatorRem<int32_t, uint8_t>, META::T_INT32, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT32, operatorRem<int32_t, uint16_t>, META::T_INT32, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT32, operatorRem<int32_t, uint32_t>, META::T_INT32, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT32, operatorRem<int32_t, uint64_t>, META::T_INT32, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT32, operatorRem<int32_t, int8_t>, META::T_INT32, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT32, operatorRem<int32_t, int16_t>, META::T_INT32, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT32, operatorRem<int32_t, int32_t>, META::T_INT32, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT32, operatorRem<int32_t, int64_t>, META::T_INT32, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT64, operatorRem<int64_t, uint8_t>, META::T_INT64, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT64, operatorRem<int64_t, uint16_t>, META::T_INT64, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT64, operatorRem<int64_t, uint32_t>, META::T_INT64, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT64, operatorRem<int64_t, uint64_t>, META::T_INT64, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT64, operatorRem<int64_t, int8_t>, META::T_INT64, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT64, operatorRem<int64_t, int16_t>, META::T_INT64, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT64, operatorRem<int64_t, int32_t>, META::T_INT64, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::REMAINDER]->set(META::T_INT64, operatorRem<int64_t, int64_t>, META::T_INT64, META::T_INT64);
	}
	/*left shift << */
	template<typename TL, typename TR>
	void* operatorLShift(void* l, void* r)
	{
		TL v = (*(TL*)&l) << (*(TR*)&r);
		return *(void**)&v;
	}
	static void initLShift()
	{
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT] = new dualArgvMathOperatorMatrix(SQL_PARSER::LEFT_SHIFT);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT8, operatorLShift<uint8_t, uint8_t>, META::T_UINT8, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT8, operatorLShift<uint8_t, uint16_t>, META::T_UINT8, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT8, operatorLShift<uint8_t, uint32_t>, META::T_UINT8, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT8, operatorLShift<uint8_t, uint64_t>, META::T_UINT8, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT8, operatorLShift<uint8_t, int8_t>, META::T_UINT8, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT8, operatorLShift<uint8_t, int16_t>, META::T_UINT8, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT8, operatorLShift<uint8_t, int32_t>, META::T_UINT8, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT8, operatorLShift<uint8_t, int64_t>, META::T_UINT8, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT16, operatorLShift<uint16_t, uint8_t>, META::T_UINT16, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT16, operatorLShift<uint16_t, uint16_t>, META::T_UINT16, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT16, operatorLShift<uint16_t, uint32_t>, META::T_UINT16, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT16, operatorLShift<uint16_t, uint64_t>, META::T_UINT16, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT16, operatorLShift<uint16_t, int8_t>, META::T_UINT16, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT16, operatorLShift<uint16_t, int16_t>, META::T_UINT16, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT16, operatorLShift<uint16_t, int32_t>, META::T_UINT16, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT16, operatorLShift<uint16_t, int64_t>, META::T_UINT16, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT32, operatorLShift<uint32_t, uint8_t>, META::T_UINT32, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT32, operatorLShift<uint32_t, uint16_t>, META::T_UINT32, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT32, operatorLShift<uint32_t, uint32_t>, META::T_UINT32, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT32, operatorLShift<uint32_t, uint64_t>, META::T_UINT32, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT32, operatorLShift<uint32_t, int8_t>, META::T_UINT32, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT32, operatorLShift<uint32_t, int16_t>, META::T_UINT32, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT32, operatorLShift<uint32_t, int32_t>, META::T_UINT32, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT32, operatorLShift<uint32_t, int64_t>, META::T_UINT32, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT64, operatorLShift<uint64_t, uint8_t>, META::T_UINT64, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT64, operatorLShift<uint64_t, uint16_t>, META::T_UINT64, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT64, operatorLShift<uint64_t, uint32_t>, META::T_UINT64, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT64, operatorLShift<uint64_t, uint64_t>, META::T_UINT64, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT64, operatorLShift<uint64_t, int8_t>, META::T_UINT64, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT64, operatorLShift<uint64_t, int16_t>, META::T_UINT64, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT64, operatorLShift<uint64_t, int32_t>, META::T_UINT64, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_UINT64, operatorLShift<uint64_t, int64_t>, META::T_UINT64, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT8, operatorLShift<int8_t, uint8_t>, META::T_INT8, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT8, operatorLShift<int8_t, uint16_t>, META::T_INT8, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT8, operatorLShift<int8_t, uint32_t>, META::T_INT8, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT8, operatorLShift<int8_t, uint64_t>, META::T_INT8, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT8, operatorLShift<int8_t, int8_t>, META::T_INT8, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT8, operatorLShift<int8_t, int16_t>, META::T_INT8, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT8, operatorLShift<int8_t, int32_t>, META::T_INT8, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT8, operatorLShift<int8_t, int64_t>, META::T_INT8, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT16, operatorLShift<int16_t, uint8_t>, META::T_INT16, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT16, operatorLShift<int16_t, uint16_t>, META::T_INT16, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT16, operatorLShift<int16_t, uint32_t>, META::T_INT16, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT16, operatorLShift<int16_t, uint64_t>, META::T_INT16, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT16, operatorLShift<int16_t, int8_t>, META::T_INT16, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT16, operatorLShift<int16_t, int16_t>, META::T_INT16, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT16, operatorLShift<int16_t, int32_t>, META::T_INT16, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT16, operatorLShift<int16_t, int64_t>, META::T_INT16, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT32, operatorLShift<int32_t, uint8_t>, META::T_INT32, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT32, operatorLShift<int32_t, uint16_t>, META::T_INT32, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT32, operatorLShift<int32_t, uint32_t>, META::T_INT32, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT32, operatorLShift<int32_t, uint64_t>, META::T_INT32, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT32, operatorLShift<int32_t, int8_t>, META::T_INT32, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT32, operatorLShift<int32_t, int16_t>, META::T_INT32, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT32, operatorLShift<int32_t, int32_t>, META::T_INT32, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT32, operatorLShift<int32_t, int64_t>, META::T_INT32, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT64, operatorLShift<int64_t, uint8_t>, META::T_INT64, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT64, operatorLShift<int64_t, uint16_t>, META::T_INT64, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT64, operatorLShift<int64_t, uint32_t>, META::T_INT64, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT64, operatorLShift<int64_t, uint64_t>, META::T_INT64, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT64, operatorLShift<int64_t, int8_t>, META::T_INT64, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT64, operatorLShift<int64_t, int16_t>, META::T_INT64, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT64, operatorLShift<int64_t, int32_t>, META::T_INT64, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::LEFT_SHIFT]->set(META::T_INT64, operatorLShift<int64_t, int64_t>, META::T_INT64, META::T_INT64);

	}
	/*right shift >> */
	template<typename TL, typename TR>
	void* operatorRShift(void* l, void* r)
	{
		TL v = (*(TL*)&l) >> (*(TR*)&r);
		return *(void**)&v;
	}
	static void initRShift()
	{
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT] = new dualArgvMathOperatorMatrix(SQL_PARSER::RIGHT_SHIFT);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT8, operatorRShift<uint8_t, uint8_t>, META::T_UINT8, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT8, operatorRShift<uint8_t, uint16_t>, META::T_UINT8, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT8, operatorRShift<uint8_t, uint32_t>, META::T_UINT8, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT8, operatorRShift<uint8_t, uint64_t>, META::T_UINT8, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT8, operatorRShift<uint8_t, int8_t>, META::T_UINT8, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT8, operatorRShift<uint8_t, int16_t>, META::T_UINT8, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT8, operatorRShift<uint8_t, int32_t>, META::T_UINT8, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT8, operatorRShift<uint8_t, int64_t>, META::T_UINT8, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT16, operatorRShift<uint16_t, uint8_t>, META::T_UINT16, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT16, operatorRShift<uint16_t, uint16_t>, META::T_UINT16, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT16, operatorRShift<uint16_t, uint32_t>, META::T_UINT16, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT16, operatorRShift<uint16_t, uint64_t>, META::T_UINT16, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT16, operatorRShift<uint16_t, int8_t>, META::T_UINT16, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT16, operatorRShift<uint16_t, int16_t>, META::T_UINT16, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT16, operatorRShift<uint16_t, int32_t>, META::T_UINT16, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT16, operatorRShift<uint16_t, int64_t>, META::T_UINT16, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT32, operatorRShift<uint32_t, uint8_t>, META::T_UINT32, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT32, operatorRShift<uint32_t, uint16_t>, META::T_UINT32, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT32, operatorRShift<uint32_t, uint32_t>, META::T_UINT32, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT32, operatorRShift<uint32_t, uint64_t>, META::T_UINT32, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT32, operatorRShift<uint32_t, int8_t>, META::T_UINT32, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT32, operatorRShift<uint32_t, int16_t>, META::T_UINT32, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT32, operatorRShift<uint32_t, int32_t>, META::T_UINT32, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT32, operatorRShift<uint32_t, int64_t>, META::T_UINT32, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT64, operatorRShift<uint64_t, uint8_t>, META::T_UINT64, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT64, operatorRShift<uint64_t, uint16_t>, META::T_UINT64, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT64, operatorRShift<uint64_t, uint32_t>, META::T_UINT64, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT64, operatorRShift<uint64_t, uint64_t>, META::T_UINT64, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT64, operatorRShift<uint64_t, int8_t>, META::T_UINT64, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT64, operatorRShift<uint64_t, int16_t>, META::T_UINT64, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT64, operatorRShift<uint64_t, int32_t>, META::T_UINT64, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_UINT64, operatorRShift<uint64_t, int64_t>, META::T_UINT64, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT8, operatorRShift<int8_t, uint8_t>, META::T_INT8, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT8, operatorRShift<int8_t, uint16_t>, META::T_INT8, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT8, operatorRShift<int8_t, uint32_t>, META::T_INT8, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT8, operatorRShift<int8_t, uint64_t>, META::T_INT8, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT8, operatorRShift<int8_t, int8_t>, META::T_INT8, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT8, operatorRShift<int8_t, int16_t>, META::T_INT8, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT8, operatorRShift<int8_t, int32_t>, META::T_INT8, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT8, operatorRShift<int8_t, int64_t>, META::T_INT8, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT16, operatorRShift<int16_t, uint8_t>, META::T_INT16, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT16, operatorRShift<int16_t, uint16_t>, META::T_INT16, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT16, operatorRShift<int16_t, uint32_t>, META::T_INT16, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT16, operatorRShift<int16_t, uint64_t>, META::T_INT16, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT16, operatorRShift<int16_t, int8_t>, META::T_INT16, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT16, operatorRShift<int16_t, int16_t>, META::T_INT16, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT16, operatorRShift<int16_t, int32_t>, META::T_INT16, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT16, operatorRShift<int16_t, int64_t>, META::T_INT16, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT32, operatorRShift<int32_t, uint8_t>, META::T_INT32, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT32, operatorRShift<int32_t, uint16_t>, META::T_INT32, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT32, operatorRShift<int32_t, uint32_t>, META::T_INT32, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT32, operatorRShift<int32_t, uint64_t>, META::T_INT32, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT32, operatorRShift<int32_t, int8_t>, META::T_INT32, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT32, operatorRShift<int32_t, int16_t>, META::T_INT32, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT32, operatorRShift<int32_t, int32_t>, META::T_INT32, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT32, operatorRShift<int32_t, int64_t>, META::T_INT32, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT64, operatorRShift<int64_t, uint8_t>, META::T_INT64, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT64, operatorRShift<int64_t, uint16_t>, META::T_INT64, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT64, operatorRShift<int64_t, uint32_t>, META::T_INT64, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT64, operatorRShift<int64_t, uint64_t>, META::T_INT64, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT64, operatorRShift<int64_t, int8_t>, META::T_INT64, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT64, operatorRShift<int64_t, int16_t>, META::T_INT64, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT64, operatorRShift<int64_t, int32_t>, META::T_INT64, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::RIGHT_SHIFT]->set(META::T_INT64, operatorRShift<int64_t, int64_t>, META::T_INT64, META::T_INT64);

	}
	/*XOR ^ */
	template<typename TL, typename TR>
	void* operatorXor(void* l, void* r)
	{
		TL v = (*(TL*)&l) ^ (*(TR*)&r);
		return *(void**)&v;
	}
	static void initXor()
	{
		dualArgvMathOperators[SQL_PARSER::XOR] = new dualArgvMathOperatorMatrix(SQL_PARSER::XOR);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT8, operatorXor<uint8_t, uint8_t>, META::T_UINT8, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT8, operatorXor<uint8_t, uint16_t>, META::T_UINT8, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT8, operatorXor<uint8_t, uint32_t>, META::T_UINT8, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT8, operatorXor<uint8_t, uint64_t>, META::T_UINT8, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT8, operatorXor<uint8_t, int8_t>, META::T_UINT8, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT8, operatorXor<uint8_t, int16_t>, META::T_UINT8, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT8, operatorXor<uint8_t, int32_t>, META::T_UINT8, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT8, operatorXor<uint8_t, int64_t>, META::T_UINT8, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT16, operatorXor<uint16_t, uint8_t>, META::T_UINT16, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT16, operatorXor<uint16_t, uint16_t>, META::T_UINT16, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT16, operatorXor<uint16_t, uint32_t>, META::T_UINT16, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT16, operatorXor<uint16_t, uint64_t>, META::T_UINT16, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT16, operatorXor<uint16_t, int8_t>, META::T_UINT16, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT16, operatorXor<uint16_t, int16_t>, META::T_UINT16, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT16, operatorXor<uint16_t, int32_t>, META::T_UINT16, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT16, operatorXor<uint16_t, int64_t>, META::T_UINT16, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT32, operatorXor<uint32_t, uint8_t>, META::T_UINT32, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT32, operatorXor<uint32_t, uint16_t>, META::T_UINT32, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT32, operatorXor<uint32_t, uint32_t>, META::T_UINT32, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT32, operatorXor<uint32_t, uint64_t>, META::T_UINT32, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT32, operatorXor<uint32_t, int8_t>, META::T_UINT32, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT32, operatorXor<uint32_t, int16_t>, META::T_UINT32, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT32, operatorXor<uint32_t, int32_t>, META::T_UINT32, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT32, operatorXor<uint32_t, int64_t>, META::T_UINT32, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT64, operatorXor<uint64_t, uint8_t>, META::T_UINT64, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT64, operatorXor<uint64_t, uint16_t>, META::T_UINT64, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT64, operatorXor<uint64_t, uint32_t>, META::T_UINT64, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT64, operatorXor<uint64_t, uint64_t>, META::T_UINT64, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT64, operatorXor<uint64_t, int8_t>, META::T_UINT64, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT64, operatorXor<uint64_t, int16_t>, META::T_UINT64, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT64, operatorXor<uint64_t, int32_t>, META::T_UINT64, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_UINT64, operatorXor<uint64_t, int64_t>, META::T_UINT64, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT8, operatorXor<int8_t, uint8_t>, META::T_INT8, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT8, operatorXor<int8_t, uint16_t>, META::T_INT8, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT8, operatorXor<int8_t, uint32_t>, META::T_INT8, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT8, operatorXor<int8_t, uint64_t>, META::T_INT8, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT8, operatorXor<int8_t, int8_t>, META::T_INT8, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT8, operatorXor<int8_t, int16_t>, META::T_INT8, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT8, operatorXor<int8_t, int32_t>, META::T_INT8, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT8, operatorXor<int8_t, int64_t>, META::T_INT8, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT16, operatorXor<int16_t, uint8_t>, META::T_INT16, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT16, operatorXor<int16_t, uint16_t>, META::T_INT16, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT16, operatorXor<int16_t, uint32_t>, META::T_INT16, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT16, operatorXor<int16_t, uint64_t>, META::T_INT16, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT16, operatorXor<int16_t, int8_t>, META::T_INT16, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT16, operatorXor<int16_t, int16_t>, META::T_INT16, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT16, operatorXor<int16_t, int32_t>, META::T_INT16, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT16, operatorXor<int16_t, int64_t>, META::T_INT16, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT32, operatorXor<int32_t, uint8_t>, META::T_INT32, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT32, operatorXor<int32_t, uint16_t>, META::T_INT32, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT32, operatorXor<int32_t, uint32_t>, META::T_INT32, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT32, operatorXor<int32_t, uint64_t>, META::T_INT32, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT32, operatorXor<int32_t, int8_t>, META::T_INT32, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT32, operatorXor<int32_t, int16_t>, META::T_INT32, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT32, operatorXor<int32_t, int32_t>, META::T_INT32, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT32, operatorXor<int32_t, int64_t>, META::T_INT32, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT64, operatorXor<int64_t, uint8_t>, META::T_INT64, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT64, operatorXor<int64_t, uint16_t>, META::T_INT64, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT64, operatorXor<int64_t, uint32_t>, META::T_INT64, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT64, operatorXor<int64_t, uint64_t>, META::T_INT64, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT64, operatorXor<int64_t, int8_t>, META::T_INT64, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT64, operatorXor<int64_t, int16_t>, META::T_INT64, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT64, operatorXor<int64_t, int32_t>, META::T_INT64, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::XOR]->set(META::T_INT64, operatorXor<int64_t, int64_t>, META::T_INT64, META::T_INT64);

	}
	/*BIT OR |*/
	template<typename TL, typename TR>
	void* operatorBitOr(void* l, void* r)
	{
		TL v = (*(TL*)&l) | (*(TR*)&r);
		return *(void**)&v;
	}
	static void initBitOr()
	{
		dualArgvMathOperators[SQL_PARSER::BIT_OR] = new dualArgvMathOperatorMatrix(SQL_PARSER::BIT_OR);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT8, operatorBitOr<uint8_t, uint8_t>, META::T_UINT8, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT8, operatorBitOr<uint8_t, uint16_t>, META::T_UINT8, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT8, operatorBitOr<uint8_t, uint32_t>, META::T_UINT8, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT8, operatorBitOr<uint8_t, uint64_t>, META::T_UINT8, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT8, operatorBitOr<uint8_t, int8_t>, META::T_UINT8, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT8, operatorBitOr<uint8_t, int16_t>, META::T_UINT8, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT8, operatorBitOr<uint8_t, int32_t>, META::T_UINT8, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT8, operatorBitOr<uint8_t, int64_t>, META::T_UINT8, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT16, operatorBitOr<uint16_t, uint8_t>, META::T_UINT16, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT16, operatorBitOr<uint16_t, uint16_t>, META::T_UINT16, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT16, operatorBitOr<uint16_t, uint32_t>, META::T_UINT16, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT16, operatorBitOr<uint16_t, uint64_t>, META::T_UINT16, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT16, operatorBitOr<uint16_t, int8_t>, META::T_UINT16, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT16, operatorBitOr<uint16_t, int16_t>, META::T_UINT16, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT16, operatorBitOr<uint16_t, int32_t>, META::T_UINT16, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT16, operatorBitOr<uint16_t, int64_t>, META::T_UINT16, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT32, operatorBitOr<uint32_t, uint8_t>, META::T_UINT32, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT32, operatorBitOr<uint32_t, uint16_t>, META::T_UINT32, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT32, operatorBitOr<uint32_t, uint32_t>, META::T_UINT32, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT32, operatorBitOr<uint32_t, uint64_t>, META::T_UINT32, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT32, operatorBitOr<uint32_t, int8_t>, META::T_UINT32, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT32, operatorBitOr<uint32_t, int16_t>, META::T_UINT32, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT32, operatorBitOr<uint32_t, int32_t>, META::T_UINT32, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT32, operatorBitOr<uint32_t, int64_t>, META::T_UINT32, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT64, operatorBitOr<uint64_t, uint8_t>, META::T_UINT64, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT64, operatorBitOr<uint64_t, uint16_t>, META::T_UINT64, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT64, operatorBitOr<uint64_t, uint32_t>, META::T_UINT64, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT64, operatorBitOr<uint64_t, uint64_t>, META::T_UINT64, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT64, operatorBitOr<uint64_t, int8_t>, META::T_UINT64, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT64, operatorBitOr<uint64_t, int16_t>, META::T_UINT64, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT64, operatorBitOr<uint64_t, int32_t>, META::T_UINT64, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_UINT64, operatorBitOr<uint64_t, int64_t>, META::T_UINT64, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT8, operatorBitOr<int8_t, uint8_t>, META::T_INT8, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT8, operatorBitOr<int8_t, uint16_t>, META::T_INT8, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT8, operatorBitOr<int8_t, uint32_t>, META::T_INT8, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT8, operatorBitOr<int8_t, uint64_t>, META::T_INT8, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT8, operatorBitOr<int8_t, int8_t>, META::T_INT8, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT8, operatorBitOr<int8_t, int16_t>, META::T_INT8, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT8, operatorBitOr<int8_t, int32_t>, META::T_INT8, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT8, operatorBitOr<int8_t, int64_t>, META::T_INT8, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT16, operatorBitOr<int16_t, uint8_t>, META::T_INT16, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT16, operatorBitOr<int16_t, uint16_t>, META::T_INT16, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT16, operatorBitOr<int16_t, uint32_t>, META::T_INT16, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT16, operatorBitOr<int16_t, uint64_t>, META::T_INT16, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT16, operatorBitOr<int16_t, int8_t>, META::T_INT16, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT16, operatorBitOr<int16_t, int16_t>, META::T_INT16, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT16, operatorBitOr<int16_t, int32_t>, META::T_INT16, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT16, operatorBitOr<int16_t, int64_t>, META::T_INT16, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT32, operatorBitOr<int32_t, uint8_t>, META::T_INT32, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT32, operatorBitOr<int32_t, uint16_t>, META::T_INT32, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT32, operatorBitOr<int32_t, uint32_t>, META::T_INT32, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT32, operatorBitOr<int32_t, uint64_t>, META::T_INT32, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT32, operatorBitOr<int32_t, int8_t>, META::T_INT32, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT32, operatorBitOr<int32_t, int16_t>, META::T_INT32, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT32, operatorBitOr<int32_t, int32_t>, META::T_INT32, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT32, operatorBitOr<int32_t, int64_t>, META::T_INT32, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT64, operatorBitOr<int64_t, uint8_t>, META::T_INT64, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT64, operatorBitOr<int64_t, uint16_t>, META::T_INT64, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT64, operatorBitOr<int64_t, uint32_t>, META::T_INT64, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT64, operatorBitOr<int64_t, uint64_t>, META::T_INT64, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT64, operatorBitOr<int64_t, int8_t>, META::T_INT64, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT64, operatorBitOr<int64_t, int16_t>, META::T_INT64, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT64, operatorBitOr<int64_t, int32_t>, META::T_INT64, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::BIT_OR]->set(META::T_INT64, operatorBitOr<int64_t, int64_t>, META::T_INT64, META::T_INT64);

	}
	/*bit and &*/
	template<typename TL, typename TR>
	void* operatorBitAnd(void* l, void* r)
	{
		TL v = (*(TL*)&l) & (*(TR*)&r);
		return *(void**)&v;
	}
	static void initBitAnd()
	{
		dualArgvMathOperators[SQL_PARSER::BIT_AND] = new dualArgvMathOperatorMatrix(SQL_PARSER::BIT_AND);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT8, operatorBitAnd<uint8_t, uint8_t>, META::T_UINT8, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT8, operatorBitAnd<uint8_t, uint16_t>, META::T_UINT8, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT8, operatorBitAnd<uint8_t, uint32_t>, META::T_UINT8, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT8, operatorBitAnd<uint8_t, uint64_t>, META::T_UINT8, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT8, operatorBitAnd<uint8_t, int8_t>, META::T_UINT8, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT8, operatorBitAnd<uint8_t, int16_t>, META::T_UINT8, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT8, operatorBitAnd<uint8_t, int32_t>, META::T_UINT8, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT8, operatorBitAnd<uint8_t, int64_t>, META::T_UINT8, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT16, operatorBitAnd<uint16_t, uint8_t>, META::T_UINT16, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT16, operatorBitAnd<uint16_t, uint16_t>, META::T_UINT16, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT16, operatorBitAnd<uint16_t, uint32_t>, META::T_UINT16, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT16, operatorBitAnd<uint16_t, uint64_t>, META::T_UINT16, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT16, operatorBitAnd<uint16_t, int8_t>, META::T_UINT16, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT16, operatorBitAnd<uint16_t, int16_t>, META::T_UINT16, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT16, operatorBitAnd<uint16_t, int32_t>, META::T_UINT16, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT16, operatorBitAnd<uint16_t, int64_t>, META::T_UINT16, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT32, operatorBitAnd<uint32_t, uint8_t>, META::T_UINT32, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT32, operatorBitAnd<uint32_t, uint16_t>, META::T_UINT32, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT32, operatorBitAnd<uint32_t, uint32_t>, META::T_UINT32, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT32, operatorBitAnd<uint32_t, uint64_t>, META::T_UINT32, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT32, operatorBitAnd<uint32_t, int8_t>, META::T_UINT32, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT32, operatorBitAnd<uint32_t, int16_t>, META::T_UINT32, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT32, operatorBitAnd<uint32_t, int32_t>, META::T_UINT32, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT32, operatorBitAnd<uint32_t, int64_t>, META::T_UINT32, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT64, operatorBitAnd<uint64_t, uint8_t>, META::T_UINT64, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT64, operatorBitAnd<uint64_t, uint16_t>, META::T_UINT64, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT64, operatorBitAnd<uint64_t, uint32_t>, META::T_UINT64, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT64, operatorBitAnd<uint64_t, uint64_t>, META::T_UINT64, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT64, operatorBitAnd<uint64_t, int8_t>, META::T_UINT64, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT64, operatorBitAnd<uint64_t, int16_t>, META::T_UINT64, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT64, operatorBitAnd<uint64_t, int32_t>, META::T_UINT64, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_UINT64, operatorBitAnd<uint64_t, int64_t>, META::T_UINT64, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT8, operatorBitAnd<int8_t, uint8_t>, META::T_INT8, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT8, operatorBitAnd<int8_t, uint16_t>, META::T_INT8, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT8, operatorBitAnd<int8_t, uint32_t>, META::T_INT8, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT8, operatorBitAnd<int8_t, uint64_t>, META::T_INT8, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT8, operatorBitAnd<int8_t, int8_t>, META::T_INT8, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT8, operatorBitAnd<int8_t, int16_t>, META::T_INT8, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT8, operatorBitAnd<int8_t, int32_t>, META::T_INT8, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT8, operatorBitAnd<int8_t, int64_t>, META::T_INT8, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT16, operatorBitAnd<int16_t, uint8_t>, META::T_INT16, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT16, operatorBitAnd<int16_t, uint16_t>, META::T_INT16, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT16, operatorBitAnd<int16_t, uint32_t>, META::T_INT16, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT16, operatorBitAnd<int16_t, uint64_t>, META::T_INT16, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT16, operatorBitAnd<int16_t, int8_t>, META::T_INT16, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT16, operatorBitAnd<int16_t, int16_t>, META::T_INT16, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT16, operatorBitAnd<int16_t, int32_t>, META::T_INT16, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT16, operatorBitAnd<int16_t, int64_t>, META::T_INT16, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT32, operatorBitAnd<int32_t, uint8_t>, META::T_INT32, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT32, operatorBitAnd<int32_t, uint16_t>, META::T_INT32, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT32, operatorBitAnd<int32_t, uint32_t>, META::T_INT32, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT32, operatorBitAnd<int32_t, uint64_t>, META::T_INT32, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT32, operatorBitAnd<int32_t, int8_t>, META::T_INT32, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT32, operatorBitAnd<int32_t, int16_t>, META::T_INT32, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT32, operatorBitAnd<int32_t, int32_t>, META::T_INT32, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT32, operatorBitAnd<int32_t, int64_t>, META::T_INT32, META::T_INT64);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT64, operatorBitAnd<int64_t, uint8_t>, META::T_INT64, META::T_UINT8);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT64, operatorBitAnd<int64_t, uint16_t>, META::T_INT64, META::T_UINT16);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT64, operatorBitAnd<int64_t, uint32_t>, META::T_INT64, META::T_UINT32);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT64, operatorBitAnd<int64_t, uint64_t>, META::T_INT64, META::T_UINT64);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT64, operatorBitAnd<int64_t, int8_t>, META::T_INT64, META::T_INT8);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT64, operatorBitAnd<int64_t, int16_t>, META::T_INT64, META::T_INT16);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT64, operatorBitAnd<int64_t, int32_t>, META::T_INT64, META::T_INT32);
		dualArgvMathOperators[SQL_PARSER::BIT_AND]->set(META::T_INT64, operatorBitAnd<int64_t, int64_t>, META::T_INT64, META::T_INT64);
	}
	/*GRATER THAN > */
	template<typename TL, typename TR>
	bool operatorGreaterThan(void* l, void* r)
	{
		return (*(TL*)&l) > (*(TR*)&r);
	}
	static void initGreaterThan()
	{
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint8_t, uint8_t>, META::T_UINT8, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint8_t, uint16_t>, META::T_UINT8, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint8_t, uint32_t>, META::T_UINT8, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint8_t, uint64_t>, META::T_UINT8, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint8_t, int8_t>, META::T_UINT8, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint8_t, int16_t>, META::T_UINT8, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint8_t, int32_t>, META::T_UINT8, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint8_t, int64_t>, META::T_UINT8, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint8_t, float>, META::T_UINT8, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint8_t, double>, META::T_UINT8, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint16_t, uint8_t>, META::T_UINT16, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint16_t, uint16_t>, META::T_UINT16, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint16_t, uint32_t>, META::T_UINT16, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint16_t, uint64_t>, META::T_UINT16, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint16_t, int8_t>, META::T_UINT16, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint16_t, int16_t>, META::T_UINT16, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint16_t, int32_t>, META::T_UINT16, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint16_t, int64_t>, META::T_UINT16, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint16_t, float>, META::T_UINT16, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint16_t, double>, META::T_UINT16, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint32_t, uint8_t>, META::T_UINT32, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint32_t, uint16_t>, META::T_UINT32, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint32_t, uint32_t>, META::T_UINT32, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint32_t, uint64_t>, META::T_UINT32, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint32_t, int8_t>, META::T_UINT32, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint32_t, int16_t>, META::T_UINT32, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint32_t, int32_t>, META::T_UINT32, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint32_t, int64_t>, META::T_UINT32, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint32_t, float>, META::T_UINT32, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint32_t, double>, META::T_UINT32, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint64_t, uint8_t>, META::T_UINT64, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint64_t, uint16_t>, META::T_UINT64, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint64_t, uint32_t>, META::T_UINT64, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint64_t, uint64_t>, META::T_UINT64, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint64_t, int8_t>, META::T_UINT64, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint64_t, int16_t>, META::T_UINT64, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint64_t, int32_t>, META::T_UINT64, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint64_t, int64_t>, META::T_UINT64, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint64_t, float>, META::T_UINT64, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint64_t, double>, META::T_UINT64, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int8_t, uint8_t>, META::T_INT8, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int8_t, uint16_t>, META::T_INT8, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int8_t, uint32_t>, META::T_INT8, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int8_t, uint64_t>, META::T_INT8, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int8_t, int8_t>, META::T_INT8, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int8_t, int16_t>, META::T_INT8, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int8_t, int32_t>, META::T_INT8, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int8_t, int64_t>, META::T_INT8, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int8_t, float>, META::T_INT8, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int8_t, double>, META::T_INT8, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int16_t, uint8_t>, META::T_INT16, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int16_t, uint16_t>, META::T_INT16, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int16_t, uint32_t>, META::T_INT16, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int16_t, uint64_t>, META::T_INT16, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int16_t, int8_t>, META::T_INT16, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int16_t, int16_t>, META::T_INT16, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int16_t, int32_t>, META::T_INT16, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int16_t, int64_t>, META::T_INT16, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int16_t, float>, META::T_INT16, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int16_t, double>, META::T_INT16, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int32_t, uint8_t>, META::T_INT32, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int32_t, uint16_t>, META::T_INT32, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int32_t, uint32_t>, META::T_INT32, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int32_t, uint64_t>, META::T_INT32, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int32_t, int8_t>, META::T_INT32, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int32_t, int16_t>, META::T_INT32, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int32_t, int32_t>, META::T_INT32, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int32_t, int64_t>, META::T_INT32, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int32_t, float>, META::T_INT32, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int32_t, double>, META::T_INT32, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int64_t, uint8_t>, META::T_INT64, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int64_t, uint16_t>, META::T_INT64, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int64_t, uint32_t>, META::T_INT64, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int64_t, uint64_t>, META::T_INT64, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int64_t, int8_t>, META::T_INT64, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int64_t, int16_t>, META::T_INT64, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int64_t, int32_t>, META::T_INT64, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int64_t, int64_t>, META::T_INT64, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int64_t, float>, META::T_INT64, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int64_t, double>, META::T_INT64, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<float, uint8_t>, META::T_FLOAT, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<float, uint16_t>, META::T_FLOAT, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<float, uint32_t>, META::T_FLOAT, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<float, uint64_t>, META::T_FLOAT, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<float, int8_t>, META::T_FLOAT, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<float, int16_t>, META::T_FLOAT, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<float, int32_t>, META::T_FLOAT, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<float, int64_t>, META::T_FLOAT, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<float, float>, META::T_FLOAT, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<float, double>, META::T_FLOAT, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<double, uint8_t>, META::T_DOUBLE, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<double, uint16_t>, META::T_DOUBLE, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<double, uint32_t>, META::T_DOUBLE, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<double, uint64_t>, META::T_DOUBLE, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<double, int8_t>, META::T_DOUBLE, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<double, int16_t>, META::T_DOUBLE, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<double, int32_t>, META::T_DOUBLE, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<double, int64_t>, META::T_DOUBLE, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<double, float>, META::T_DOUBLE, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<double, double>, META::T_DOUBLE, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<uint64_t, uint64_t>, META::T_TIMESTAMP, META::T_TIMESTAMP);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int64_t, int64_t>, META::T_DATETIME, META::T_DATETIME);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int64_t, int64_t>, META::T_TIME, META::T_TIME);
		dualArgvLogicOperators[SQL_PARSER::GREATER_THAN]->set(operatorGreaterThan<int32_t, int32_t>, META::T_DATE, META::T_DATE);
	}
	/*LESS THAN < */
	template<typename TL, typename TR>
	bool operatorLessThan(void* l, void* r)
	{
		return (*(TL*)&l) < (*(TR*)&r);
	}
	static void initLessThan()
	{
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN] = new dualArgvLogicOperatorMatrix(SQL_PARSER::LESS_THAN);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint8_t, uint8_t>, META::T_UINT8, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint8_t, uint16_t>, META::T_UINT8, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint8_t, uint32_t>, META::T_UINT8, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint8_t, uint64_t>, META::T_UINT8, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint8_t, int8_t>, META::T_UINT8, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint8_t, int16_t>, META::T_UINT8, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint8_t, int32_t>, META::T_UINT8, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint8_t, int64_t>, META::T_UINT8, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint8_t, float>, META::T_UINT8, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint8_t, double>, META::T_UINT8, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint16_t, uint8_t>, META::T_UINT16, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint16_t, uint16_t>, META::T_UINT16, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint16_t, uint32_t>, META::T_UINT16, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint16_t, uint64_t>, META::T_UINT16, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint16_t, int8_t>, META::T_UINT16, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint16_t, int16_t>, META::T_UINT16, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint16_t, int32_t>, META::T_UINT16, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint16_t, int64_t>, META::T_UINT16, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint16_t, float>, META::T_UINT16, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint16_t, double>, META::T_UINT16, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint32_t, uint8_t>, META::T_UINT32, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint32_t, uint16_t>, META::T_UINT32, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint32_t, uint32_t>, META::T_UINT32, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint32_t, uint64_t>, META::T_UINT32, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint32_t, int8_t>, META::T_UINT32, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint32_t, int16_t>, META::T_UINT32, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint32_t, int32_t>, META::T_UINT32, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint32_t, int64_t>, META::T_UINT32, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint32_t, float>, META::T_UINT32, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint32_t, double>, META::T_UINT32, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint64_t, uint8_t>, META::T_UINT64, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint64_t, uint16_t>, META::T_UINT64, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint64_t, uint32_t>, META::T_UINT64, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint64_t, uint64_t>, META::T_UINT64, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint64_t, int8_t>, META::T_UINT64, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint64_t, int16_t>, META::T_UINT64, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint64_t, int32_t>, META::T_UINT64, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint64_t, int64_t>, META::T_UINT64, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint64_t, float>, META::T_UINT64, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint64_t, double>, META::T_UINT64, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int8_t, uint8_t>, META::T_INT8, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int8_t, uint16_t>, META::T_INT8, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int8_t, uint32_t>, META::T_INT8, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int8_t, uint64_t>, META::T_INT8, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int8_t, int8_t>, META::T_INT8, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int8_t, int16_t>, META::T_INT8, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int8_t, int32_t>, META::T_INT8, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int8_t, int64_t>, META::T_INT8, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int8_t, float>, META::T_INT8, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int8_t, double>, META::T_INT8, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int16_t, uint8_t>, META::T_INT16, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int16_t, uint16_t>, META::T_INT16, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int16_t, uint32_t>, META::T_INT16, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int16_t, uint64_t>, META::T_INT16, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int16_t, int8_t>, META::T_INT16, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int16_t, int16_t>, META::T_INT16, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int16_t, int32_t>, META::T_INT16, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int16_t, int64_t>, META::T_INT16, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int16_t, float>, META::T_INT16, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int16_t, double>, META::T_INT16, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int32_t, uint8_t>, META::T_INT32, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int32_t, uint16_t>, META::T_INT32, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int32_t, uint32_t>, META::T_INT32, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int32_t, uint64_t>, META::T_INT32, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int32_t, int8_t>, META::T_INT32, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int32_t, int16_t>, META::T_INT32, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int32_t, int32_t>, META::T_INT32, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int32_t, int64_t>, META::T_INT32, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int32_t, float>, META::T_INT32, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int32_t, double>, META::T_INT32, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int64_t, uint8_t>, META::T_INT64, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int64_t, uint16_t>, META::T_INT64, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int64_t, uint32_t>, META::T_INT64, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int64_t, uint64_t>, META::T_INT64, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int64_t, int8_t>, META::T_INT64, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int64_t, int16_t>, META::T_INT64, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int64_t, int32_t>, META::T_INT64, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int64_t, int64_t>, META::T_INT64, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int64_t, float>, META::T_INT64, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int64_t, double>, META::T_INT64, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<float, uint8_t>, META::T_FLOAT, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<float, uint16_t>, META::T_FLOAT, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<float, uint32_t>, META::T_FLOAT, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<float, uint64_t>, META::T_FLOAT, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<float, int8_t>, META::T_FLOAT, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<float, int16_t>, META::T_FLOAT, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<float, int32_t>, META::T_FLOAT, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<float, int64_t>, META::T_FLOAT, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<float, float>, META::T_FLOAT, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<float, double>, META::T_FLOAT, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<double, uint8_t>, META::T_DOUBLE, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<double, uint16_t>, META::T_DOUBLE, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<double, uint32_t>, META::T_DOUBLE, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<double, uint64_t>, META::T_DOUBLE, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<double, int8_t>, META::T_DOUBLE, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<double, int16_t>, META::T_DOUBLE, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<double, int32_t>, META::T_DOUBLE, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<double, int64_t>, META::T_DOUBLE, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<double, float>, META::T_DOUBLE, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<double, double>, META::T_DOUBLE, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<uint64_t, uint64_t>, META::T_TIMESTAMP, META::T_TIMESTAMP);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int64_t, int64_t>, META::T_DATETIME, META::T_DATETIME);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int64_t, int64_t>, META::T_TIME, META::T_TIME);
		dualArgvLogicOperators[SQL_PARSER::LESS_THAN]->set(operatorLessThan<int32_t, int32_t>, META::T_DATE, META::T_DATE);
	}
	/*GREATER_EQUAL  >= */
	template<typename TL, typename TR>
	bool operatoGreaterEqual(void* l, void* r)
	{
		return (*(TL*)&l) >= (*(TR*)&r);
	}
	static void initGreaterEqual()
	{
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL] = new dualArgvLogicOperatorMatrix(SQL_PARSER::GREATER_EQUAL);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint8_t, uint8_t>, META::T_UINT8, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint8_t, uint16_t>, META::T_UINT8, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint8_t, uint32_t>, META::T_UINT8, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint8_t, uint64_t>, META::T_UINT8, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint8_t, int8_t>, META::T_UINT8, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint8_t, int16_t>, META::T_UINT8, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint8_t, int32_t>, META::T_UINT8, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint8_t, int64_t>, META::T_UINT8, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint8_t, float>, META::T_UINT8, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint8_t, double>, META::T_UINT8, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint16_t, uint8_t>, META::T_UINT16, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint16_t, uint16_t>, META::T_UINT16, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint16_t, uint32_t>, META::T_UINT16, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint16_t, uint64_t>, META::T_UINT16, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint16_t, int8_t>, META::T_UINT16, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint16_t, int16_t>, META::T_UINT16, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint16_t, int32_t>, META::T_UINT16, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint16_t, int64_t>, META::T_UINT16, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint16_t, float>, META::T_UINT16, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint16_t, double>, META::T_UINT16, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint32_t, uint8_t>, META::T_UINT32, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint32_t, uint16_t>, META::T_UINT32, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint32_t, uint32_t>, META::T_UINT32, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint32_t, uint64_t>, META::T_UINT32, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint32_t, int8_t>, META::T_UINT32, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint32_t, int16_t>, META::T_UINT32, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint32_t, int32_t>, META::T_UINT32, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint32_t, int64_t>, META::T_UINT32, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint32_t, float>, META::T_UINT32, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint32_t, double>, META::T_UINT32, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint64_t, uint8_t>, META::T_UINT64, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint64_t, uint16_t>, META::T_UINT64, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint64_t, uint32_t>, META::T_UINT64, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint64_t, uint64_t>, META::T_UINT64, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint64_t, int8_t>, META::T_UINT64, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint64_t, int16_t>, META::T_UINT64, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint64_t, int32_t>, META::T_UINT64, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint64_t, int64_t>, META::T_UINT64, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint64_t, float>, META::T_UINT64, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint64_t, double>, META::T_UINT64, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int8_t, uint8_t>, META::T_INT8, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int8_t, uint16_t>, META::T_INT8, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int8_t, uint32_t>, META::T_INT8, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int8_t, uint64_t>, META::T_INT8, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int8_t, int8_t>, META::T_INT8, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int8_t, int16_t>, META::T_INT8, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int8_t, int32_t>, META::T_INT8, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int8_t, int64_t>, META::T_INT8, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int8_t, float>, META::T_INT8, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int8_t, double>, META::T_INT8, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int16_t, uint8_t>, META::T_INT16, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int16_t, uint16_t>, META::T_INT16, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int16_t, uint32_t>, META::T_INT16, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int16_t, uint64_t>, META::T_INT16, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int16_t, int8_t>, META::T_INT16, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int16_t, int16_t>, META::T_INT16, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int16_t, int32_t>, META::T_INT16, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int16_t, int64_t>, META::T_INT16, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int16_t, float>, META::T_INT16, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int16_t, double>, META::T_INT16, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int32_t, uint8_t>, META::T_INT32, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int32_t, uint16_t>, META::T_INT32, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int32_t, uint32_t>, META::T_INT32, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int32_t, uint64_t>, META::T_INT32, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int32_t, int8_t>, META::T_INT32, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int32_t, int16_t>, META::T_INT32, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int32_t, int32_t>, META::T_INT32, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int32_t, int64_t>, META::T_INT32, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int32_t, float>, META::T_INT32, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int32_t, double>, META::T_INT32, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int64_t, uint8_t>, META::T_INT64, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int64_t, uint16_t>, META::T_INT64, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int64_t, uint32_t>, META::T_INT64, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int64_t, uint64_t>, META::T_INT64, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int64_t, int8_t>, META::T_INT64, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int64_t, int16_t>, META::T_INT64, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int64_t, int32_t>, META::T_INT64, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int64_t, int64_t>, META::T_INT64, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int64_t, float>, META::T_INT64, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int64_t, double>, META::T_INT64, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<float, uint8_t>, META::T_FLOAT, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<float, uint16_t>, META::T_FLOAT, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<float, uint32_t>, META::T_FLOAT, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<float, uint64_t>, META::T_FLOAT, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<float, int8_t>, META::T_FLOAT, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<float, int16_t>, META::T_FLOAT, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<float, int32_t>, META::T_FLOAT, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<float, int64_t>, META::T_FLOAT, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<float, float>, META::T_FLOAT, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<float, double>, META::T_FLOAT, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<double, uint8_t>, META::T_DOUBLE, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<double, uint16_t>, META::T_DOUBLE, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<double, uint32_t>, META::T_DOUBLE, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<double, uint64_t>, META::T_DOUBLE, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<double, int8_t>, META::T_DOUBLE, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<double, int16_t>, META::T_DOUBLE, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<double, int32_t>, META::T_DOUBLE, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<double, int64_t>, META::T_DOUBLE, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<double, float>, META::T_DOUBLE, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<double, double>, META::T_DOUBLE, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<uint64_t, uint64_t>, META::T_TIMESTAMP, META::T_TIMESTAMP);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int64_t, int64_t>, META::T_DATETIME, META::T_DATETIME);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int64_t, int64_t>, META::T_TIME, META::T_TIME);
		dualArgvLogicOperators[SQL_PARSER::GREATER_EQUAL]->set(operatoGreaterEqual<int32_t, int32_t>, META::T_DATE, META::T_DATE);
	}
	/*LESS_EQUAL  <= */
	template<typename TL, typename TR>
	bool operatorLessEqual(void* l, void* r)
	{
		return (*(TL*)&l) <= (*(TR*)&r);
	}
	static void initLessEqual()
	{
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL] = new dualArgvLogicOperatorMatrix(SQL_PARSER::LESS_EQUAL);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint8_t, uint8_t>, META::T_UINT8, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint8_t, uint16_t>, META::T_UINT8, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint8_t, uint32_t>, META::T_UINT8, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint8_t, uint64_t>, META::T_UINT8, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint8_t, int8_t>, META::T_UINT8, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint8_t, int16_t>, META::T_UINT8, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint8_t, int32_t>, META::T_UINT8, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint8_t, int64_t>, META::T_UINT8, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint8_t, float>, META::T_UINT8, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint8_t, double>, META::T_UINT8, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint16_t, uint8_t>, META::T_UINT16, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint16_t, uint16_t>, META::T_UINT16, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint16_t, uint32_t>, META::T_UINT16, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint16_t, uint64_t>, META::T_UINT16, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint16_t, int8_t>, META::T_UINT16, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint16_t, int16_t>, META::T_UINT16, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint16_t, int32_t>, META::T_UINT16, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint16_t, int64_t>, META::T_UINT16, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint16_t, float>, META::T_UINT16, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint16_t, double>, META::T_UINT16, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint32_t, uint8_t>, META::T_UINT32, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint32_t, uint16_t>, META::T_UINT32, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint32_t, uint32_t>, META::T_UINT32, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint32_t, uint64_t>, META::T_UINT32, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint32_t, int8_t>, META::T_UINT32, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint32_t, int16_t>, META::T_UINT32, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint32_t, int32_t>, META::T_UINT32, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint32_t, int64_t>, META::T_UINT32, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint32_t, float>, META::T_UINT32, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint32_t, double>, META::T_UINT32, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint64_t, uint8_t>, META::T_UINT64, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint64_t, uint16_t>, META::T_UINT64, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint64_t, uint32_t>, META::T_UINT64, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint64_t, uint64_t>, META::T_UINT64, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint64_t, int8_t>, META::T_UINT64, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint64_t, int16_t>, META::T_UINT64, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint64_t, int32_t>, META::T_UINT64, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint64_t, int64_t>, META::T_UINT64, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint64_t, float>, META::T_UINT64, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint64_t, double>, META::T_UINT64, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int8_t, uint8_t>, META::T_INT8, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int8_t, uint16_t>, META::T_INT8, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int8_t, uint32_t>, META::T_INT8, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int8_t, uint64_t>, META::T_INT8, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int8_t, int8_t>, META::T_INT8, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int8_t, int16_t>, META::T_INT8, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int8_t, int32_t>, META::T_INT8, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int8_t, int64_t>, META::T_INT8, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int8_t, float>, META::T_INT8, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int8_t, double>, META::T_INT8, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int16_t, uint8_t>, META::T_INT16, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int16_t, uint16_t>, META::T_INT16, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int16_t, uint32_t>, META::T_INT16, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int16_t, uint64_t>, META::T_INT16, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int16_t, int8_t>, META::T_INT16, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int16_t, int16_t>, META::T_INT16, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int16_t, int32_t>, META::T_INT16, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int16_t, int64_t>, META::T_INT16, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int16_t, float>, META::T_INT16, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int16_t, double>, META::T_INT16, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int32_t, uint8_t>, META::T_INT32, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int32_t, uint16_t>, META::T_INT32, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int32_t, uint32_t>, META::T_INT32, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int32_t, uint64_t>, META::T_INT32, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int32_t, int8_t>, META::T_INT32, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int32_t, int16_t>, META::T_INT32, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int32_t, int32_t>, META::T_INT32, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int32_t, int64_t>, META::T_INT32, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int32_t, float>, META::T_INT32, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int32_t, double>, META::T_INT32, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int64_t, uint8_t>, META::T_INT64, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int64_t, uint16_t>, META::T_INT64, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int64_t, uint32_t>, META::T_INT64, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int64_t, uint64_t>, META::T_INT64, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int64_t, int8_t>, META::T_INT64, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int64_t, int16_t>, META::T_INT64, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int64_t, int32_t>, META::T_INT64, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int64_t, int64_t>, META::T_INT64, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int64_t, float>, META::T_INT64, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int64_t, double>, META::T_INT64, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<float, uint8_t>, META::T_FLOAT, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<float, uint16_t>, META::T_FLOAT, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<float, uint32_t>, META::T_FLOAT, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<float, uint64_t>, META::T_FLOAT, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<float, int8_t>, META::T_FLOAT, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<float, int16_t>, META::T_FLOAT, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<float, int32_t>, META::T_FLOAT, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<float, int64_t>, META::T_FLOAT, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<float, float>, META::T_FLOAT, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<float, double>, META::T_FLOAT, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<double, uint8_t>, META::T_DOUBLE, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<double, uint16_t>, META::T_DOUBLE, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<double, uint32_t>, META::T_DOUBLE, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<double, uint64_t>, META::T_DOUBLE, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<double, int8_t>, META::T_DOUBLE, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<double, int16_t>, META::T_DOUBLE, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<double, int32_t>, META::T_DOUBLE, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<double, int64_t>, META::T_DOUBLE, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<double, float>, META::T_DOUBLE, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<double, double>, META::T_DOUBLE, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<uint64_t, uint64_t>, META::T_TIMESTAMP, META::T_TIMESTAMP);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int64_t, int64_t>, META::T_DATETIME, META::T_DATETIME);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int64_t, int64_t>, META::T_TIME, META::T_TIME);
		dualArgvLogicOperators[SQL_PARSER::LESS_EQUAL]->set(operatorLessEqual<int32_t, int32_t>, META::T_DATE, META::T_DATE);
	}
	/*EQUAL  == */
	template<typename TL, typename TR>
	bool operatorEqual(void* l, void* r)
	{
		return (*(TL*)&l) == (*(TR*)&r);
	}
	bool operatorEqualVarValue(void* l, void* r)
	{
		varLenValue* lv = static_cast<varLenValue*>(l), * rv = static_cast<varLenValue*>(r);
		bool ret = false;
		if (lv->size == rv->size)
			ret = memcmp(lv->value, rv->value, lv->size) == 0;
		if (lv->alloced)
			shellGlobalBufferPool.free((char*)lv->value);
		if (rv->alloced)
			shellGlobalBufferPool.free((char*)rv->value);
		shellGlobalBufferPool.free(rv);
		shellGlobalBufferPool.free(lv);
		return ret;
	}

	static void initEqual()
	{
		dualArgvLogicOperators[SQL_PARSER::EQUAL] = new dualArgvLogicOperatorMatrix(SQL_PARSER::EQUAL);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint8_t, uint8_t>, META::T_UINT8, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint8_t, uint16_t>, META::T_UINT8, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint8_t, uint32_t>, META::T_UINT8, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint8_t, uint64_t>, META::T_UINT8, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint8_t, int8_t>, META::T_UINT8, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint8_t, int16_t>, META::T_UINT8, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint8_t, int32_t>, META::T_UINT8, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint8_t, int64_t>, META::T_UINT8, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint8_t, float>, META::T_UINT8, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint8_t, double>, META::T_UINT8, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint16_t, uint8_t>, META::T_UINT16, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint16_t, uint16_t>, META::T_UINT16, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint16_t, uint32_t>, META::T_UINT16, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint16_t, uint64_t>, META::T_UINT16, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint16_t, int8_t>, META::T_UINT16, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint16_t, int16_t>, META::T_UINT16, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint16_t, int32_t>, META::T_UINT16, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint16_t, int64_t>, META::T_UINT16, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint16_t, float>, META::T_UINT16, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint16_t, double>, META::T_UINT16, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint32_t, uint8_t>, META::T_UINT32, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint32_t, uint16_t>, META::T_UINT32, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint32_t, uint32_t>, META::T_UINT32, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint32_t, uint64_t>, META::T_UINT32, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint32_t, int8_t>, META::T_UINT32, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint32_t, int16_t>, META::T_UINT32, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint32_t, int32_t>, META::T_UINT32, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint32_t, int64_t>, META::T_UINT32, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint32_t, float>, META::T_UINT32, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint32_t, double>, META::T_UINT32, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint64_t, uint8_t>, META::T_UINT64, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint64_t, uint16_t>, META::T_UINT64, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint64_t, uint32_t>, META::T_UINT64, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint64_t, uint64_t>, META::T_UINT64, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint64_t, int8_t>, META::T_UINT64, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint64_t, int16_t>, META::T_UINT64, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint64_t, int32_t>, META::T_UINT64, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint64_t, int64_t>, META::T_UINT64, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint64_t, float>, META::T_UINT64, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint64_t, double>, META::T_UINT64, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int8_t, uint8_t>, META::T_INT8, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int8_t, uint16_t>, META::T_INT8, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int8_t, uint32_t>, META::T_INT8, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int8_t, uint64_t>, META::T_INT8, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int8_t, int8_t>, META::T_INT8, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int8_t, int16_t>, META::T_INT8, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int8_t, int32_t>, META::T_INT8, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int8_t, int64_t>, META::T_INT8, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int8_t, float>, META::T_INT8, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int8_t, double>, META::T_INT8, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int16_t, uint8_t>, META::T_INT16, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int16_t, uint16_t>, META::T_INT16, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int16_t, uint32_t>, META::T_INT16, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int16_t, uint64_t>, META::T_INT16, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int16_t, int8_t>, META::T_INT16, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int16_t, int16_t>, META::T_INT16, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int16_t, int32_t>, META::T_INT16, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int16_t, int64_t>, META::T_INT16, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int16_t, float>, META::T_INT16, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int16_t, double>, META::T_INT16, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int32_t, uint8_t>, META::T_INT32, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int32_t, uint16_t>, META::T_INT32, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int32_t, uint32_t>, META::T_INT32, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int32_t, uint64_t>, META::T_INT32, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int32_t, int8_t>, META::T_INT32, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int32_t, int16_t>, META::T_INT32, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int32_t, int32_t>, META::T_INT32, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int32_t, int64_t>, META::T_INT32, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int32_t, float>, META::T_INT32, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int32_t, double>, META::T_INT32, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int64_t, uint8_t>, META::T_INT64, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int64_t, uint16_t>, META::T_INT64, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int64_t, uint32_t>, META::T_INT64, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int64_t, uint64_t>, META::T_INT64, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int64_t, int8_t>, META::T_INT64, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int64_t, int16_t>, META::T_INT64, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int64_t, int32_t>, META::T_INT64, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int64_t, int64_t>, META::T_INT64, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int64_t, float>, META::T_INT64, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int64_t, double>, META::T_INT64, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<float, uint8_t>, META::T_FLOAT, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<float, uint16_t>, META::T_FLOAT, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<float, uint32_t>, META::T_FLOAT, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<float, uint64_t>, META::T_FLOAT, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<float, int8_t>, META::T_FLOAT, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<float, int16_t>, META::T_FLOAT, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<float, int32_t>, META::T_FLOAT, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<float, int64_t>, META::T_FLOAT, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<float, float>, META::T_FLOAT, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<float, double>, META::T_FLOAT, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<double, uint8_t>, META::T_DOUBLE, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<double, uint16_t>, META::T_DOUBLE, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<double, uint32_t>, META::T_DOUBLE, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<double, uint64_t>, META::T_DOUBLE, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<double, int8_t>, META::T_DOUBLE, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<double, int16_t>, META::T_DOUBLE, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<double, int32_t>, META::T_DOUBLE, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<double, int64_t>, META::T_DOUBLE, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<double, float>, META::T_DOUBLE, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<double, double>, META::T_DOUBLE, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint64_t, uint64_t>, META::T_TIMESTAMP, META::T_TIMESTAMP);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int64_t, int64_t>, META::T_DATETIME, META::T_DATETIME);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int64_t, int64_t>, META::T_TIME, META::T_TIME);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<int32_t, int32_t>, META::T_DATE, META::T_DATE);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint16_t, uint16_t>, META::T_ENUM, META::T_ENUM);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<uint64_t, uint64_t>, META::T_SET, META::T_SET);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqual<bool, bool>, META::T_BOOL, META::T_BOOL);

		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqualVarValue, META::T_BIG_NUMBER, META::T_BIG_NUMBER);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqualVarValue, META::T_BLOB, META::T_BLOB);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqualVarValue, META::T_DECIMAL, META::T_DECIMAL);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqualVarValue, META::T_GEOMETRY, META::T_GEOMETRY);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqualVarValue, META::T_JSON, META::T_JSON);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqualVarValue, META::T_XML, META::T_XML);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqualVarValue, META::T_BYTE, META::T_BYTE);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqualVarValue, META::T_TEXT, META::T_TEXT);
		dualArgvLogicOperators[SQL_PARSER::EQUAL]->set(operatorEqualVarValue, META::T_BINARY, META::T_BINARY);
	}
	/*NOT EQUAL  != */
	template<typename TL, typename TR>
	bool operatorNotEqual(void* l, void* r)
	{
		return (*(TL*)&l) != (*(TR*)&r);
	}
	bool operatorNotEqualVarValue(void* l, void* r)
	{
		varLenValue* lv = static_cast<varLenValue*>(l), * rv = static_cast<varLenValue*>(r);
		bool ret = true;
		if (lv->size == rv->size)
			ret = memcmp(lv->value, rv->value, lv->size) != 0;
		if (lv->alloced)
			shellGlobalBufferPool.free((char*)lv->value);
		if (rv->alloced)
			shellGlobalBufferPool.free((char*)rv->value);
		shellGlobalBufferPool.free(rv);
		shellGlobalBufferPool.free(lv);
		return ret;
	}

	static void initNotEqual()
	{
		dualArgvLogicOperators[SQL_PARSER::EQUAL] = new dualArgvLogicOperatorMatrix(SQL_PARSER::NOT_EQUAL);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint8_t, uint8_t>, META::T_UINT8, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint8_t, uint16_t>, META::T_UINT8, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint8_t, uint32_t>, META::T_UINT8, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint8_t, uint64_t>, META::T_UINT8, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint8_t, int8_t>, META::T_UINT8, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint8_t, int16_t>, META::T_UINT8, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint8_t, int32_t>, META::T_UINT8, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint8_t, int64_t>, META::T_UINT8, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint8_t, float>, META::T_UINT8, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint8_t, double>, META::T_UINT8, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint16_t, uint8_t>, META::T_UINT16, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint16_t, uint16_t>, META::T_UINT16, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint16_t, uint32_t>, META::T_UINT16, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint16_t, uint64_t>, META::T_UINT16, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint16_t, int8_t>, META::T_UINT16, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint16_t, int16_t>, META::T_UINT16, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint16_t, int32_t>, META::T_UINT16, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint16_t, int64_t>, META::T_UINT16, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint16_t, float>, META::T_UINT16, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint16_t, double>, META::T_UINT16, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint32_t, uint8_t>, META::T_UINT32, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint32_t, uint16_t>, META::T_UINT32, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint32_t, uint32_t>, META::T_UINT32, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint32_t, uint64_t>, META::T_UINT32, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint32_t, int8_t>, META::T_UINT32, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint32_t, int16_t>, META::T_UINT32, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint32_t, int32_t>, META::T_UINT32, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint32_t, int64_t>, META::T_UINT32, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint32_t, float>, META::T_UINT32, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint32_t, double>, META::T_UINT32, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint64_t, uint8_t>, META::T_UINT64, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint64_t, uint16_t>, META::T_UINT64, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint64_t, uint32_t>, META::T_UINT64, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint64_t, uint64_t>, META::T_UINT64, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint64_t, int8_t>, META::T_UINT64, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint64_t, int16_t>, META::T_UINT64, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint64_t, int32_t>, META::T_UINT64, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint64_t, int64_t>, META::T_UINT64, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint64_t, float>, META::T_UINT64, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<uint64_t, double>, META::T_UINT64, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int8_t, uint8_t>, META::T_INT8, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int8_t, uint16_t>, META::T_INT8, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int8_t, uint32_t>, META::T_INT8, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int8_t, uint64_t>, META::T_INT8, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int8_t, int8_t>, META::T_INT8, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int8_t, int16_t>, META::T_INT8, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int8_t, int32_t>, META::T_INT8, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int8_t, int64_t>, META::T_INT8, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int8_t, float>, META::T_INT8, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int8_t, double>, META::T_INT8, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int16_t, uint8_t>, META::T_INT16, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int16_t, uint16_t>, META::T_INT16, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int16_t, uint32_t>, META::T_INT16, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int16_t, uint64_t>, META::T_INT16, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int16_t, int8_t>, META::T_INT16, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int16_t, int16_t>, META::T_INT16, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int16_t, int32_t>, META::T_INT16, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int16_t, int64_t>, META::T_INT16, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int16_t, float>, META::T_INT16, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int16_t, double>, META::T_INT16, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int32_t, uint8_t>, META::T_INT32, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int32_t, uint16_t>, META::T_INT32, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int32_t, uint32_t>, META::T_INT32, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int32_t, uint64_t>, META::T_INT32, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int32_t, int8_t>, META::T_INT32, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int32_t, int16_t>, META::T_INT32, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int32_t, int32_t>, META::T_INT32, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int32_t, int64_t>, META::T_INT32, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int32_t, float>, META::T_INT32, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int32_t, double>, META::T_INT32, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int64_t, uint8_t>, META::T_INT64, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int64_t, uint16_t>, META::T_INT64, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int64_t, uint32_t>, META::T_INT64, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int64_t, uint64_t>, META::T_INT64, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int64_t, int8_t>, META::T_INT64, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int64_t, int16_t>, META::T_INT64, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int64_t, int32_t>, META::T_INT64, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int64_t, int64_t>, META::T_INT64, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int64_t, float>, META::T_INT64, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<int64_t, double>, META::T_INT64, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<float, uint8_t>, META::T_FLOAT, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<float, uint16_t>, META::T_FLOAT, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<float, uint32_t>, META::T_FLOAT, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<float, uint64_t>, META::T_FLOAT, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<float, int8_t>, META::T_FLOAT, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<float, int16_t>, META::T_FLOAT, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<float, int32_t>, META::T_FLOAT, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<float, int64_t>, META::T_FLOAT, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<float, float>, META::T_FLOAT, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<float, double>, META::T_FLOAT, META::T_DOUBLE);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<double, uint8_t>, META::T_DOUBLE, META::T_UINT8);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<double, uint16_t>, META::T_DOUBLE, META::T_UINT16);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<double, uint32_t>, META::T_DOUBLE, META::T_UINT32);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<double, uint64_t>, META::T_DOUBLE, META::T_UINT64);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<double, int8_t>, META::T_DOUBLE, META::T_INT8);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<double, int16_t>, META::T_DOUBLE, META::T_INT16);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<double, int32_t>, META::T_DOUBLE, META::T_INT32);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<double, int64_t>, META::T_DOUBLE, META::T_INT64);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<double, float>, META::T_DOUBLE, META::T_FLOAT);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqual<double, double>, META::T_DOUBLE, META::T_DOUBLE);

		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqualVarValue, META::T_BIG_NUMBER, META::T_BIG_NUMBER);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqualVarValue, META::T_BLOB, META::T_BLOB);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqualVarValue, META::T_DECIMAL, META::T_DECIMAL);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqualVarValue, META::T_GEOMETRY, META::T_GEOMETRY);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqualVarValue, META::T_JSON, META::T_JSON);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqualVarValue, META::T_XML, META::T_XML);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqualVarValue, META::T_BYTE, META::T_BYTE);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqualVarValue, META::T_TEXT, META::T_TEXT);
		dualArgvLogicOperators[SQL_PARSER::NOT_EQUAL]->set(operatorNotEqualVarValue, META::T_BINARY, META::T_BINARY);
	}
	void initExpressionOperators()
	{
		initTilde();
		initAdd();
		initSub();
		initMul();
		initDiv();
		initRem();
		initLShift();
		initRShift();
		initXor();
		initBitOr();
		initBitAnd();
		initGreaterThan();
		initLessThan();
		initGreaterEqual();
		initLessEqual();
		initEqual();
		initNotEqual();
	}
}
